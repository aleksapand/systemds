//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-27506705
// Cuda compilation tools, release 10.2, V10.2.89
// Based on LLVM 3.4svn
//

.version 6.5
.target sm_30
.address_size 64

.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.extern .shared .align 1 .b8 memory[];
.global .align 1 .b8 $str[78] = {69, 82, 82, 79, 82, 58, 32, 110, 111, 32, 99, 111, 108, 117, 109, 110, 32, 105, 110, 100, 105, 99, 101, 115, 32, 97, 114, 114, 97, 121, 32, 105, 110, 32, 97, 32, 100, 101, 110, 115, 101, 32, 109, 97, 116, 114, 105, 120, 33, 32, 84, 104, 105, 115, 32, 119, 105, 108, 108, 32, 108, 105, 107, 101, 108, 121, 32, 99, 114, 97, 115, 104, 32, 58, 45, 47, 10, 0};

.func  (.param .b32 func_retval0) _ZN14MatrixAccessorIfE9len_denseEv(
	.param .b64 _ZN14MatrixAccessorIfE9len_denseEv_param_0
)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIfE9len_denseEv_param_0];
	ld.u64 	%rd2, [%rd1];
	ld.u32 	%r1, [%rd2+4];
	ld.u32 	%r2, [%rd2+8];
	mul.lo.s32 	%r3, %r2, %r1;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

.func  (.param .b32 func_retval0) _ZN14MatrixAccessorIfE9pos_denseEj(
	.param .b64 _ZN14MatrixAccessorIfE9pos_denseEj_param_0,
	.param .b32 _ZN14MatrixAccessorIfE9pos_denseEj_param_1
)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIfE9pos_denseEj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIfE9pos_denseEj_param_1];
	ld.u64 	%rd2, [%rd1];
	ld.u32 	%r2, [%rd2+8];
	mul.lo.s32 	%r3, %r2, %r1;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

.func  (.param .b64 func_retval0) _ZN14MatrixAccessorIfE10cols_denseEj(
	.param .b64 _ZN14MatrixAccessorIfE10cols_denseEj_param_0,
	.param .b32 _ZN14MatrixAccessorIfE10cols_denseEj_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<4>;


	mov.u64 	%rd1, $str;
	cvta.global.u64 	%rd2, %rd1;
	mov.u64 	%rd3, 0;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 0
	st.param.b64	[func_retval0+0], %rd3;
	ret;
}

.func  (.param .b64 func_retval0) _ZN14MatrixAccessorIfE12val_dense_rcEjj(
	.param .b64 _ZN14MatrixAccessorIfE12val_dense_rcEjj_param_0,
	.param .b32 _ZN14MatrixAccessorIfE12val_dense_rcEjj_param_1,
	.param .b32 _ZN14MatrixAccessorIfE12val_dense_rcEjj_param_2
)
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIfE12val_dense_rcEjj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIfE12val_dense_rcEjj_param_1];
	ld.param.u32 	%r2, [_ZN14MatrixAccessorIfE12val_dense_rcEjj_param_2];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+32];
	ld.u32 	%r3, [%rd2+8];
	mad.lo.s32 	%r4, %r3, %r1, %r2;
	mul.wide.u32 	%rd4, %r4, 4;
	add.s64 	%rd5, %rd3, %rd4;
	st.param.b64	[func_retval0+0], %rd5;
	ret;
}

.func  (.param .b64 func_retval0) _ZN14MatrixAccessorIfE10vals_denseEj(
	.param .b64 _ZN14MatrixAccessorIfE10vals_denseEj_param_0,
	.param .b32 _ZN14MatrixAccessorIfE10vals_denseEj_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIfE10vals_denseEj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIfE10vals_denseEj_param_1];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+32];
	mul.wide.u32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	st.param.b64	[func_retval0+0], %rd5;
	ret;
}

.func  (.param .b32 func_retval0) _ZN14MatrixAccessorIfE13row_len_denseEj(
	.param .b64 _ZN14MatrixAccessorIfE13row_len_denseEj_param_0,
	.param .b32 _ZN14MatrixAccessorIfE13row_len_denseEj_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIfE13row_len_denseEj_param_0];
	ld.u64 	%rd2, [%rd1];
	ld.u32 	%r1, [%rd2+4];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func  (.param .b64 func_retval0) _ZN14MatrixAccessorIfE11val_dense_iEj(
	.param .b64 _ZN14MatrixAccessorIfE11val_dense_iEj_param_0,
	.param .b32 _ZN14MatrixAccessorIfE11val_dense_iEj_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIfE11val_dense_iEj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIfE11val_dense_iEj_param_1];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+32];
	mul.wide.u32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	st.param.b64	[func_retval0+0], %rd5;
	ret;
}

.func  (.param .b32 func_retval0) _ZN14MatrixAccessorIfE10len_sparseEv(
	.param .b64 _ZN14MatrixAccessorIfE10len_sparseEv_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIfE10len_sparseEv_param_0];
	ld.u64 	%rd2, [%rd1];
	ld.u32 	%r1, [%rd2];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func  (.param .b32 func_retval0) _ZN14MatrixAccessorIfE10pos_sparseEj(
	.param .b64 _ZN14MatrixAccessorIfE10pos_sparseEj_param_0,
	.param .b32 _ZN14MatrixAccessorIfE10pos_sparseEj_param_1
)
{
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIfE10pos_sparseEj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIfE10pos_sparseEj_param_1];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+16];
	mul.wide.u32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.u32 	%r2, [%rd5];
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

.func  (.param .b64 func_retval0) _ZN14MatrixAccessorIfE11cols_sparseEj(
	.param .b64 _ZN14MatrixAccessorIfE11cols_sparseEj_param_0,
	.param .b32 _ZN14MatrixAccessorIfE11cols_sparseEj_param_1
)
{
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIfE11cols_sparseEj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIfE11cols_sparseEj_param_1];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+24];
	ld.u64 	%rd4, [%rd2+16];
	mul.wide.u32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.u32 	%r2, [%rd6];
	mul.wide.u32 	%rd7, %r2, 4;
	add.s64 	%rd8, %rd3, %rd7;
	st.param.b64	[func_retval0+0], %rd8;
	ret;
}

.func  (.param .b64 func_retval0) _ZN14MatrixAccessorIfE13val_sparse_rcEjj(
	.param .b64 _ZN14MatrixAccessorIfE13val_sparse_rcEjj_param_0,
	.param .b32 _ZN14MatrixAccessorIfE13val_sparse_rcEjj_param_1,
	.param .b32 _ZN14MatrixAccessorIfE13val_sparse_rcEjj_param_2
)
{
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIfE13val_sparse_rcEjj_param_0];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+32];
	st.param.b64	[func_retval0+0], %rd3;
	ret;
}

.func  (.param .b64 func_retval0) _ZN14MatrixAccessorIfE11vals_sparseEj(
	.param .b64 _ZN14MatrixAccessorIfE11vals_sparseEj_param_0,
	.param .b32 _ZN14MatrixAccessorIfE11vals_sparseEj_param_1
)
{
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIfE11vals_sparseEj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIfE11vals_sparseEj_param_1];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+32];
	ld.u64 	%rd4, [%rd2+16];
	mul.wide.u32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.u32 	%r2, [%rd6];
	mul.wide.u32 	%rd7, %r2, 4;
	add.s64 	%rd8, %rd3, %rd7;
	st.param.b64	[func_retval0+0], %rd8;
	ret;
}

.func  (.param .b32 func_retval0) _ZN14MatrixAccessorIfE14row_len_sparseEj(
	.param .b64 _ZN14MatrixAccessorIfE14row_len_sparseEj_param_0,
	.param .b32 _ZN14MatrixAccessorIfE14row_len_sparseEj_param_1
)
{
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIfE14row_len_sparseEj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIfE14row_len_sparseEj_param_1];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+16];
	add.s32 	%r2, %r1, 1;
	mul.wide.u32 	%rd4, %r2, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.u32 	%r3, [%rd5];
	mul.wide.u32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd3, %rd6;
	ld.u32 	%r4, [%rd7];
	sub.s32 	%r5, %r3, %r4;
	st.param.b32	[func_retval0+0], %r5;
	ret;
}

.func  (.param .b64 func_retval0) _ZN14MatrixAccessorIfE12val_sparse_iEj(
	.param .b64 _ZN14MatrixAccessorIfE12val_sparse_iEj_param_0,
	.param .b32 _ZN14MatrixAccessorIfE12val_sparse_iEj_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIfE12val_sparse_iEj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIfE12val_sparse_iEj_param_1];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+32];
	mul.wide.u32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	st.param.b64	[func_retval0+0], %rd5;
	ret;
}

.func _ZN14MatrixAccessorIfE10set_sparseEjjf(
	.param .b64 _ZN14MatrixAccessorIfE10set_sparseEjjf_param_0,
	.param .b32 _ZN14MatrixAccessorIfE10set_sparseEjjf_param_1,
	.param .b32 _ZN14MatrixAccessorIfE10set_sparseEjjf_param_2,
	.param .b32 _ZN14MatrixAccessorIfE10set_sparseEjjf_param_3
)
{
	.reg .f32 	%f<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIfE10set_sparseEjjf_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIfE10set_sparseEjjf_param_1];
	ld.param.u32 	%r2, [_ZN14MatrixAccessorIfE10set_sparseEjjf_param_2];
	ld.param.f32 	%f1, [_ZN14MatrixAccessorIfE10set_sparseEjjf_param_3];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+32];
	mul.wide.u32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	st.f32 	[%rd5], %f1;
	ld.u64 	%rd6, [%rd1];
	ld.u64 	%rd7, [%rd6+24];
	add.s64 	%rd8, %rd7, %rd4;
	st.u32 	[%rd8], %r2;
	ret;
}

.func  (.param .b32 func_retval0) _ZN14MatrixAccessorIdE9len_denseEv(
	.param .b64 _ZN14MatrixAccessorIdE9len_denseEv_param_0
)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIdE9len_denseEv_param_0];
	ld.u64 	%rd2, [%rd1];
	ld.u32 	%r1, [%rd2+4];
	ld.u32 	%r2, [%rd2+8];
	mul.lo.s32 	%r3, %r2, %r1;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

.func  (.param .b32 func_retval0) _ZN14MatrixAccessorIdE9pos_denseEj(
	.param .b64 _ZN14MatrixAccessorIdE9pos_denseEj_param_0,
	.param .b32 _ZN14MatrixAccessorIdE9pos_denseEj_param_1
)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIdE9pos_denseEj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIdE9pos_denseEj_param_1];
	ld.u64 	%rd2, [%rd1];
	ld.u32 	%r2, [%rd2+8];
	mul.lo.s32 	%r3, %r2, %r1;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

.func  (.param .b64 func_retval0) _ZN14MatrixAccessorIdE10cols_denseEj(
	.param .b64 _ZN14MatrixAccessorIdE10cols_denseEj_param_0,
	.param .b32 _ZN14MatrixAccessorIdE10cols_denseEj_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<4>;


	mov.u64 	%rd1, $str;
	cvta.global.u64 	%rd2, %rd1;
	mov.u64 	%rd3, 0;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 1
	st.param.b64	[func_retval0+0], %rd3;
	ret;
}

.func  (.param .b64 func_retval0) _ZN14MatrixAccessorIdE12val_dense_rcEjj(
	.param .b64 _ZN14MatrixAccessorIdE12val_dense_rcEjj_param_0,
	.param .b32 _ZN14MatrixAccessorIdE12val_dense_rcEjj_param_1,
	.param .b32 _ZN14MatrixAccessorIdE12val_dense_rcEjj_param_2
)
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIdE12val_dense_rcEjj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIdE12val_dense_rcEjj_param_1];
	ld.param.u32 	%r2, [_ZN14MatrixAccessorIdE12val_dense_rcEjj_param_2];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+32];
	ld.u32 	%r3, [%rd2+8];
	mad.lo.s32 	%r4, %r3, %r1, %r2;
	mul.wide.u32 	%rd4, %r4, 8;
	add.s64 	%rd5, %rd3, %rd4;
	st.param.b64	[func_retval0+0], %rd5;
	ret;
}

.func  (.param .b64 func_retval0) _ZN14MatrixAccessorIdE10vals_denseEj(
	.param .b64 _ZN14MatrixAccessorIdE10vals_denseEj_param_0,
	.param .b32 _ZN14MatrixAccessorIdE10vals_denseEj_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIdE10vals_denseEj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIdE10vals_denseEj_param_1];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+32];
	mul.wide.u32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	st.param.b64	[func_retval0+0], %rd5;
	ret;
}

.func  (.param .b32 func_retval0) _ZN14MatrixAccessorIdE13row_len_denseEj(
	.param .b64 _ZN14MatrixAccessorIdE13row_len_denseEj_param_0,
	.param .b32 _ZN14MatrixAccessorIdE13row_len_denseEj_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIdE13row_len_denseEj_param_0];
	ld.u64 	%rd2, [%rd1];
	ld.u32 	%r1, [%rd2+4];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func  (.param .b64 func_retval0) _ZN14MatrixAccessorIdE11val_dense_iEj(
	.param .b64 _ZN14MatrixAccessorIdE11val_dense_iEj_param_0,
	.param .b32 _ZN14MatrixAccessorIdE11val_dense_iEj_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIdE11val_dense_iEj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIdE11val_dense_iEj_param_1];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+32];
	mul.wide.u32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	st.param.b64	[func_retval0+0], %rd5;
	ret;
}

.func  (.param .b32 func_retval0) _ZN14MatrixAccessorIdE10len_sparseEv(
	.param .b64 _ZN14MatrixAccessorIdE10len_sparseEv_param_0
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIdE10len_sparseEv_param_0];
	ld.u64 	%rd2, [%rd1];
	ld.u32 	%r1, [%rd2];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func  (.param .b32 func_retval0) _ZN14MatrixAccessorIdE10pos_sparseEj(
	.param .b64 _ZN14MatrixAccessorIdE10pos_sparseEj_param_0,
	.param .b32 _ZN14MatrixAccessorIdE10pos_sparseEj_param_1
)
{
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIdE10pos_sparseEj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIdE10pos_sparseEj_param_1];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+16];
	mul.wide.u32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.u32 	%r2, [%rd5];
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

.func  (.param .b64 func_retval0) _ZN14MatrixAccessorIdE11cols_sparseEj(
	.param .b64 _ZN14MatrixAccessorIdE11cols_sparseEj_param_0,
	.param .b32 _ZN14MatrixAccessorIdE11cols_sparseEj_param_1
)
{
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIdE11cols_sparseEj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIdE11cols_sparseEj_param_1];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+24];
	ld.u64 	%rd4, [%rd2+16];
	mul.wide.u32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.u32 	%r2, [%rd6];
	mul.wide.u32 	%rd7, %r2, 4;
	add.s64 	%rd8, %rd3, %rd7;
	st.param.b64	[func_retval0+0], %rd8;
	ret;
}

.func  (.param .b64 func_retval0) _ZN14MatrixAccessorIdE13val_sparse_rcEjj(
	.param .b64 _ZN14MatrixAccessorIdE13val_sparse_rcEjj_param_0,
	.param .b32 _ZN14MatrixAccessorIdE13val_sparse_rcEjj_param_1,
	.param .b32 _ZN14MatrixAccessorIdE13val_sparse_rcEjj_param_2
)
{
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIdE13val_sparse_rcEjj_param_0];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+32];
	st.param.b64	[func_retval0+0], %rd3;
	ret;
}

.func  (.param .b64 func_retval0) _ZN14MatrixAccessorIdE11vals_sparseEj(
	.param .b64 _ZN14MatrixAccessorIdE11vals_sparseEj_param_0,
	.param .b32 _ZN14MatrixAccessorIdE11vals_sparseEj_param_1
)
{
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIdE11vals_sparseEj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIdE11vals_sparseEj_param_1];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+32];
	ld.u64 	%rd4, [%rd2+16];
	mul.wide.u32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.u32 	%r2, [%rd6];
	mul.wide.u32 	%rd7, %r2, 8;
	add.s64 	%rd8, %rd3, %rd7;
	st.param.b64	[func_retval0+0], %rd8;
	ret;
}

.func  (.param .b32 func_retval0) _ZN14MatrixAccessorIdE14row_len_sparseEj(
	.param .b64 _ZN14MatrixAccessorIdE14row_len_sparseEj_param_0,
	.param .b32 _ZN14MatrixAccessorIdE14row_len_sparseEj_param_1
)
{
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIdE14row_len_sparseEj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIdE14row_len_sparseEj_param_1];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+16];
	add.s32 	%r2, %r1, 1;
	mul.wide.u32 	%rd4, %r2, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.u32 	%r3, [%rd5];
	mul.wide.u32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd3, %rd6;
	ld.u32 	%r4, [%rd7];
	sub.s32 	%r5, %r3, %r4;
	st.param.b32	[func_retval0+0], %r5;
	ret;
}

.func  (.param .b64 func_retval0) _ZN14MatrixAccessorIdE12val_sparse_iEj(
	.param .b64 _ZN14MatrixAccessorIdE12val_sparse_iEj_param_0,
	.param .b32 _ZN14MatrixAccessorIdE12val_sparse_iEj_param_1
)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIdE12val_sparse_iEj_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIdE12val_sparse_iEj_param_1];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+32];
	mul.wide.u32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	st.param.b64	[func_retval0+0], %rd5;
	ret;
}

.func _ZN14MatrixAccessorIdE10set_sparseEjjd(
	.param .b64 _ZN14MatrixAccessorIdE10set_sparseEjjd_param_0,
	.param .b32 _ZN14MatrixAccessorIdE10set_sparseEjjd_param_1,
	.param .b32 _ZN14MatrixAccessorIdE10set_sparseEjjd_param_2,
	.param .b64 _ZN14MatrixAccessorIdE10set_sparseEjjd_param_3
)
{
	.reg .b32 	%r<3>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [_ZN14MatrixAccessorIdE10set_sparseEjjd_param_0];
	ld.param.u32 	%r1, [_ZN14MatrixAccessorIdE10set_sparseEjjd_param_1];
	ld.param.u32 	%r2, [_ZN14MatrixAccessorIdE10set_sparseEjjd_param_2];
	ld.param.f64 	%fd1, [_ZN14MatrixAccessorIdE10set_sparseEjjd_param_3];
	ld.u64 	%rd2, [%rd1];
	ld.u64 	%rd3, [%rd2+32];
	mul.wide.u32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	st.f64 	[%rd5], %fd1;
	ld.u64 	%rd6, [%rd1];
	ld.u64 	%rd7, [%rd6+24];
	mul.wide.u32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	st.u32 	[%rd9], %r2;
	ret;
}

	// .globl	double2float_f
.visible .entry double2float_f(
	.param .u64 double2float_f_param_0,
	.param .u64 double2float_f_param_1,
	.param .u32 double2float_f_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [double2float_f_param_0];
	ld.param.u64 	%rd2, [double2float_f_param_1];
	ld.param.u32 	%r2, [double2float_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB30_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvt.rn.f32.f64	%f1, %fd1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

BB30_2:
	ret;
}

	// .globl	float2double_f
.visible .entry float2double_f(
	.param .u64 float2double_f_param_0,
	.param .u64 float2double_f_param_1,
	.param .u32 float2double_f_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [float2double_f_param_0];
	ld.param.u64 	%rd2, [float2double_f_param_1];
	ld.param.u32 	%r2, [float2double_f_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB31_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvt.f64.f32	%fd1, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f64 	[%rd8], %fd1;

BB31_2:
	ret;
}

	// .globl	reduce_sum_f
.visible .entry reduce_sum_f(
	.param .u64 reduce_sum_f_param_0,
	.param .u64 reduce_sum_f_param_1,
	.param .u32 reduce_sum_f_param_2
)
{
	.local .align 8 .b8 	__local_depot32[272];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<25>;
	.reg .f32 	%f<60>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<123>;


	mov.u64 	%SPL, __local_depot32;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd17, [reduce_sum_f_param_0];
	ld.param.u64 	%rd16, [reduce_sum_f_param_1];
	ld.param.u32 	%r5, [reduce_sum_f_param_2];
	add.u64 	%rd18, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	st.local.u64 	[%rd1], %rd17;
	cvta.to.global.u64 	%rd19, %rd17;
	ld.global.u64 	%rd20, [%rd19+16];
	setp.eq.s64	%p1, %rd20, 0;
	@%p1 bra 	BB32_2;

	mov.u64 	%rd21, _ZN14MatrixAccessorIfE10len_sparseEv;
	st.local.u64 	[%rd1+8], %rd21;
	mov.u64 	%rd23, 0;
	st.local.u64 	[%rd1+16], %rd23;
	mov.u64 	%rd24, _ZN14MatrixAccessorIfE10pos_sparseEj;
	st.local.u64 	[%rd1+40], %rd24;
	st.local.u64 	[%rd1+48], %rd23;
	mov.u64 	%rd26, _ZN14MatrixAccessorIfE11cols_sparseEj;
	st.local.u64 	[%rd1+56], %rd26;
	st.local.u64 	[%rd1+64], %rd23;
	mov.u64 	%rd28, _ZN14MatrixAccessorIfE13val_sparse_rcEjj;
	st.local.u64 	[%rd1+88], %rd28;
	st.local.u64 	[%rd1+96], %rd23;
	mov.u64 	%rd30, _ZN14MatrixAccessorIfE11vals_sparseEj;
	st.local.u64 	[%rd1+104], %rd30;
	st.local.u64 	[%rd1+112], %rd23;
	mov.u64 	%rd32, _ZN14MatrixAccessorIfE14row_len_sparseEj;
	st.local.u64 	[%rd1+24], %rd32;
	st.local.u64 	[%rd1+32], %rd23;
	mov.u64 	%rd34, _ZN14MatrixAccessorIfE12val_sparse_iEj;
	st.local.u64 	[%rd1+72], %rd34;
	st.local.u64 	[%rd1+80], %rd23;
	mov.u64 	%rd36, _ZN14MatrixAccessorIfE10set_sparseEjjf;
	st.local.u64 	[%rd1+120], %rd36;
	st.local.u64 	[%rd1+128], %rd23;
	bra.uni 	BB32_3;

BB32_2:
	mov.u64 	%rd38, _ZN14MatrixAccessorIfE9len_denseEv;
	st.local.u64 	[%rd1+8], %rd38;
	mov.u64 	%rd40, 0;
	st.local.u64 	[%rd1+16], %rd40;
	mov.u64 	%rd41, _ZN14MatrixAccessorIfE9pos_denseEj;
	st.local.u64 	[%rd1+40], %rd41;
	st.local.u64 	[%rd1+48], %rd40;
	mov.u64 	%rd43, _ZN14MatrixAccessorIfE10cols_denseEj;
	st.local.u64 	[%rd1+56], %rd43;
	st.local.u64 	[%rd1+64], %rd40;
	mov.u64 	%rd45, _ZN14MatrixAccessorIfE12val_dense_rcEjj;
	st.local.u64 	[%rd1+88], %rd45;
	st.local.u64 	[%rd1+96], %rd40;
	mov.u64 	%rd47, _ZN14MatrixAccessorIfE10vals_denseEj;
	st.local.u64 	[%rd1+104], %rd47;
	st.local.u64 	[%rd1+112], %rd40;
	mov.u64 	%rd49, _ZN14MatrixAccessorIfE13row_len_denseEj;
	st.local.u64 	[%rd1+24], %rd49;
	st.local.u64 	[%rd1+32], %rd40;
	mov.u64 	%rd51, _ZN14MatrixAccessorIfE11val_dense_iEj;
	st.local.u64 	[%rd1+72], %rd51;
	st.local.u64 	[%rd1+80], %rd40;

BB32_3:
	add.u64 	%rd53, %SP, 136;
	add.u64 	%rd2, %SPL, 136;
	st.local.u64 	[%rd2], %rd16;
	cvta.to.global.u64 	%rd54, %rd16;
	ld.global.u64 	%rd55, [%rd54+16];
	setp.eq.s64	%p2, %rd55, 0;
	@%p2 bra 	BB32_5;

	mov.u64 	%rd56, _ZN14MatrixAccessorIfE10len_sparseEv;
	st.local.u64 	[%rd2+8], %rd56;
	mov.u64 	%rd58, 0;
	st.local.u64 	[%rd2+16], %rd58;
	mov.u64 	%rd59, _ZN14MatrixAccessorIfE10pos_sparseEj;
	st.local.u64 	[%rd2+40], %rd59;
	st.local.u64 	[%rd2+48], %rd58;
	mov.u64 	%rd61, _ZN14MatrixAccessorIfE11cols_sparseEj;
	st.local.u64 	[%rd2+56], %rd61;
	st.local.u64 	[%rd2+64], %rd58;
	mov.u64 	%rd63, _ZN14MatrixAccessorIfE13val_sparse_rcEjj;
	st.local.u64 	[%rd2+88], %rd63;
	st.local.u64 	[%rd2+96], %rd58;
	mov.u64 	%rd65, _ZN14MatrixAccessorIfE11vals_sparseEj;
	st.local.u64 	[%rd2+104], %rd65;
	st.local.u64 	[%rd2+112], %rd58;
	mov.u64 	%rd67, _ZN14MatrixAccessorIfE14row_len_sparseEj;
	st.local.u64 	[%rd2+24], %rd67;
	st.local.u64 	[%rd2+32], %rd58;
	mov.u64 	%rd69, _ZN14MatrixAccessorIfE12val_sparse_iEj;
	st.local.u64 	[%rd2+72], %rd69;
	st.local.u64 	[%rd2+80], %rd58;
	mov.u64 	%rd71, _ZN14MatrixAccessorIfE10set_sparseEjjf;
	st.local.u64 	[%rd2+120], %rd71;
	st.local.u64 	[%rd2+128], %rd58;
	bra.uni 	BB32_6;

BB32_5:
	mov.u64 	%rd73, _ZN14MatrixAccessorIfE9len_denseEv;
	st.local.u64 	[%rd2+8], %rd73;
	mov.u64 	%rd75, 0;
	st.local.u64 	[%rd2+16], %rd75;
	mov.u64 	%rd76, _ZN14MatrixAccessorIfE9pos_denseEj;
	st.local.u64 	[%rd2+40], %rd76;
	st.local.u64 	[%rd2+48], %rd75;
	mov.u64 	%rd78, _ZN14MatrixAccessorIfE10cols_denseEj;
	st.local.u64 	[%rd2+56], %rd78;
	st.local.u64 	[%rd2+64], %rd75;
	mov.u64 	%rd80, _ZN14MatrixAccessorIfE12val_dense_rcEjj;
	st.local.u64 	[%rd2+88], %rd80;
	st.local.u64 	[%rd2+96], %rd75;
	mov.u64 	%rd82, _ZN14MatrixAccessorIfE10vals_denseEj;
	st.local.u64 	[%rd2+104], %rd82;
	st.local.u64 	[%rd2+112], %rd75;
	mov.u64 	%rd84, _ZN14MatrixAccessorIfE13row_len_denseEj;
	st.local.u64 	[%rd2+24], %rd84;
	st.local.u64 	[%rd2+32], %rd75;
	mov.u64 	%rd86, _ZN14MatrixAccessorIfE11val_dense_iEj;
	st.local.u64 	[%rd2+72], %rd86;
	st.local.u64 	[%rd2+80], %rd75;

BB32_6:
	mov.u32 	%r6, %tid.x;
	mov.u32 	%r7, %ctaid.x;
	shl.b32 	%r8, %r7, 1;
	mov.u32 	%r9, %ntid.x;
	mad.lo.s32 	%r43, %r8, %r9, %r6;
	mov.f32 	%f44, 0f00000000;
	setp.ge.u32	%p3, %r43, %r5;
	@%p3 bra 	BB32_15;

	mov.f32 	%f44, 0f00000000;

BB32_8:
	ld.local.u64 	%rd3, [%rd1+112];
	ld.local.u64 	%rd120, [%rd1+104];
	and.b64  	%rd90, %rd120, 1;
	setp.eq.b64	%p4, %rd90, 1;
	@!%p4 bra 	BB32_10;
	bra.uni 	BB32_9;

BB32_9:
	add.s64 	%rd93, %rd1, %rd3;
	ld.local.u64 	%rd94, [%rd93];
	add.s64 	%rd95, %rd120, %rd94;
	ld.u64 	%rd120, [%rd95+-1];

BB32_10:
	add.s64 	%rd97, %rd18, %rd3;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd97;
	.param .b32 param1;
	st.param.b32	[param1+0], %r43;
	.param .b64 retval0;
	prototype_2 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _) ;
	call (retval0), 
	%rd120, 
	(
	param0, 
	param1
	)
	, prototype_2;
	ld.param.b64	%rd99, [retval0+0];
	
	//{
	}// Callseq End 2
	ld.f32 	%f31, [%rd99];
	add.f32 	%f44, %f44, %f31;
	add.s32 	%r16, %r43, %r9;
	setp.ge.u32	%p5, %r16, %r5;
	@%p5 bra 	BB32_14;

	ld.local.u64 	%rd121, [%rd1+104];
	and.b64  	%rd102, %rd121, 1;
	setp.eq.b64	%p6, %rd102, 1;
	ld.local.u64 	%rd8, [%rd1+112];
	@!%p6 bra 	BB32_13;
	bra.uni 	BB32_12;

BB32_12:
	add.s64 	%rd105, %rd1, %rd8;
	ld.local.u64 	%rd106, [%rd105];
	add.s64 	%rd107, %rd121, %rd106;
	ld.u64 	%rd121, [%rd107+-1];

BB32_13:
	add.s64 	%rd109, %rd18, %rd8;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd109;
	.param .b32 param1;
	st.param.b32	[param1+0], %r16;
	.param .b64 retval0;
	prototype_3 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _) ;
	call (retval0), 
	%rd121, 
	(
	param0, 
	param1
	)
	, prototype_3;
	ld.param.b64	%rd111, [retval0+0];
	
	//{
	}// Callseq End 3
	ld.f32 	%f32, [%rd111];
	add.f32 	%f44, %f44, %f32;

BB32_14:
	shl.b32 	%r20, %r9, 1;
	mov.u32 	%r21, %nctaid.x;
	mad.lo.s32 	%r43, %r20, %r21, %r43;
	setp.lt.u32	%p7, %r43, %r5;
	@%p7 bra 	BB32_8;

BB32_15:
	shl.b32 	%r23, %r6, 2;
	mov.u32 	%r24, memory;
	add.s32 	%r4, %r24, %r23;
	st.shared.f32 	[%r4], %f44;
	bar.sync 	0;
	setp.lt.u32	%p8, %r9, 1024;
	@%p8 bra 	BB32_19;

	setp.gt.u32	%p9, %r6, 511;
	@%p9 bra 	BB32_18;

	ld.shared.f32 	%f33, [%r4+2048];
	add.f32 	%f44, %f44, %f33;
	st.shared.f32 	[%r4], %f44;

BB32_18:
	bar.sync 	0;

BB32_19:
	setp.lt.u32	%p10, %r9, 512;
	@%p10 bra 	BB32_23;

	setp.gt.u32	%p11, %r6, 255;
	@%p11 bra 	BB32_22;

	ld.shared.f32 	%f34, [%r4+1024];
	add.f32 	%f44, %f44, %f34;
	st.shared.f32 	[%r4], %f44;

BB32_22:
	bar.sync 	0;

BB32_23:
	setp.lt.u32	%p12, %r9, 256;
	@%p12 bra 	BB32_27;

	setp.gt.u32	%p13, %r6, 127;
	@%p13 bra 	BB32_26;

	ld.shared.f32 	%f35, [%r4+512];
	add.f32 	%f44, %f44, %f35;
	st.shared.f32 	[%r4], %f44;

BB32_26:
	bar.sync 	0;

BB32_27:
	setp.lt.u32	%p14, %r9, 128;
	@%p14 bra 	BB32_31;

	setp.gt.u32	%p15, %r6, 63;
	@%p15 bra 	BB32_30;

	ld.shared.f32 	%f36, [%r4+256];
	add.f32 	%f44, %f44, %f36;
	st.shared.f32 	[%r4], %f44;

BB32_30:
	bar.sync 	0;

BB32_31:
	setp.gt.u32	%p16, %r6, 31;
	@%p16 bra 	BB32_44;

	setp.lt.u32	%p17, %r9, 64;
	@%p17 bra 	BB32_34;

	ld.volatile.shared.f32 	%f37, [%r4+128];
	add.f32 	%f44, %f44, %f37;
	st.volatile.shared.f32 	[%r4], %f44;

BB32_34:
	setp.lt.u32	%p18, %r9, 32;
	@%p18 bra 	BB32_36;

	ld.volatile.shared.f32 	%f38, [%r4+64];
	add.f32 	%f44, %f44, %f38;
	st.volatile.shared.f32 	[%r4], %f44;

BB32_36:
	setp.lt.u32	%p19, %r9, 16;
	@%p19 bra 	BB32_38;

	ld.volatile.shared.f32 	%f39, [%r4+32];
	add.f32 	%f44, %f44, %f39;
	st.volatile.shared.f32 	[%r4], %f44;

BB32_38:
	setp.lt.u32	%p20, %r9, 8;
	@%p20 bra 	BB32_40;

	ld.volatile.shared.f32 	%f40, [%r4+16];
	add.f32 	%f44, %f44, %f40;
	st.volatile.shared.f32 	[%r4], %f44;

BB32_40:
	setp.lt.u32	%p21, %r9, 4;
	@%p21 bra 	BB32_42;

	ld.volatile.shared.f32 	%f41, [%r4+8];
	add.f32 	%f44, %f44, %f41;
	st.volatile.shared.f32 	[%r4], %f44;

BB32_42:
	setp.lt.u32	%p22, %r9, 2;
	@%p22 bra 	BB32_44;

	ld.volatile.shared.f32 	%f42, [%r4+4];
	add.f32 	%f43, %f44, %f42;
	st.volatile.shared.f32 	[%r4], %f43;

BB32_44:
	setp.ne.s32	%p23, %r6, 0;
	@%p23 bra 	BB32_48;

	ld.shared.f32 	%f28, [memory];
	ld.local.u64 	%rd114, [%rd2+96];
	add.s64 	%rd11, %rd2, %rd114;
	add.s64 	%rd12, %rd53, %rd114;
	ld.local.u64 	%rd122, [%rd2+88];
	and.b64  	%rd115, %rd122, 1;
	setp.eq.b64	%p24, %rd115, 1;
	@!%p24 bra 	BB32_47;
	bra.uni 	BB32_46;

BB32_46:
	ld.local.u64 	%rd116, [%rd11];
	add.s64 	%rd117, %rd122, %rd116;
	ld.u64 	%rd122, [%rd117+-1];

BB32_47:
	mov.u32 	%r42, 0;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b32 param1;
	st.param.b32	[param1+0], %r42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r7;
	.param .b64 retval0;
	prototype_4 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _, .param .b32 _) ;
	call (retval0), 
	%rd122, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_4;
	ld.param.b64	%rd119, [retval0+0];
	
	//{
	}// Callseq End 4
	st.f32 	[%rd119], %f28;

BB32_48:
	ret;
}

	// .globl	reduce_sum_d
.visible .entry reduce_sum_d(
	.param .u64 reduce_sum_d_param_0,
	.param .u64 reduce_sum_d_param_1,
	.param .u32 reduce_sum_d_param_2
)
{
	.local .align 8 .b8 	__local_depot33[272];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<25>;
	.reg .b32 	%r<44>;
	.reg .f64 	%fd<60>;
	.reg .b64 	%rd<123>;


	mov.u64 	%SPL, __local_depot33;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd17, [reduce_sum_d_param_0];
	ld.param.u64 	%rd16, [reduce_sum_d_param_1];
	ld.param.u32 	%r5, [reduce_sum_d_param_2];
	add.u64 	%rd18, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	st.local.u64 	[%rd1], %rd17;
	cvta.to.global.u64 	%rd19, %rd17;
	ld.global.u64 	%rd20, [%rd19+16];
	setp.eq.s64	%p1, %rd20, 0;
	@%p1 bra 	BB33_2;

	mov.u64 	%rd21, _ZN14MatrixAccessorIdE10len_sparseEv;
	st.local.u64 	[%rd1+8], %rd21;
	mov.u64 	%rd23, 0;
	st.local.u64 	[%rd1+16], %rd23;
	mov.u64 	%rd24, _ZN14MatrixAccessorIdE10pos_sparseEj;
	st.local.u64 	[%rd1+40], %rd24;
	st.local.u64 	[%rd1+48], %rd23;
	mov.u64 	%rd26, _ZN14MatrixAccessorIdE11cols_sparseEj;
	st.local.u64 	[%rd1+56], %rd26;
	st.local.u64 	[%rd1+64], %rd23;
	mov.u64 	%rd28, _ZN14MatrixAccessorIdE13val_sparse_rcEjj;
	st.local.u64 	[%rd1+88], %rd28;
	st.local.u64 	[%rd1+96], %rd23;
	mov.u64 	%rd30, _ZN14MatrixAccessorIdE11vals_sparseEj;
	st.local.u64 	[%rd1+104], %rd30;
	st.local.u64 	[%rd1+112], %rd23;
	mov.u64 	%rd32, _ZN14MatrixAccessorIdE14row_len_sparseEj;
	st.local.u64 	[%rd1+24], %rd32;
	st.local.u64 	[%rd1+32], %rd23;
	mov.u64 	%rd34, _ZN14MatrixAccessorIdE12val_sparse_iEj;
	st.local.u64 	[%rd1+72], %rd34;
	st.local.u64 	[%rd1+80], %rd23;
	mov.u64 	%rd36, _ZN14MatrixAccessorIdE10set_sparseEjjd;
	st.local.u64 	[%rd1+120], %rd36;
	st.local.u64 	[%rd1+128], %rd23;
	bra.uni 	BB33_3;

BB33_2:
	mov.u64 	%rd38, _ZN14MatrixAccessorIdE9len_denseEv;
	st.local.u64 	[%rd1+8], %rd38;
	mov.u64 	%rd40, 0;
	st.local.u64 	[%rd1+16], %rd40;
	mov.u64 	%rd41, _ZN14MatrixAccessorIdE9pos_denseEj;
	st.local.u64 	[%rd1+40], %rd41;
	st.local.u64 	[%rd1+48], %rd40;
	mov.u64 	%rd43, _ZN14MatrixAccessorIdE10cols_denseEj;
	st.local.u64 	[%rd1+56], %rd43;
	st.local.u64 	[%rd1+64], %rd40;
	mov.u64 	%rd45, _ZN14MatrixAccessorIdE12val_dense_rcEjj;
	st.local.u64 	[%rd1+88], %rd45;
	st.local.u64 	[%rd1+96], %rd40;
	mov.u64 	%rd47, _ZN14MatrixAccessorIdE10vals_denseEj;
	st.local.u64 	[%rd1+104], %rd47;
	st.local.u64 	[%rd1+112], %rd40;
	mov.u64 	%rd49, _ZN14MatrixAccessorIdE13row_len_denseEj;
	st.local.u64 	[%rd1+24], %rd49;
	st.local.u64 	[%rd1+32], %rd40;
	mov.u64 	%rd51, _ZN14MatrixAccessorIdE11val_dense_iEj;
	st.local.u64 	[%rd1+72], %rd51;
	st.local.u64 	[%rd1+80], %rd40;

BB33_3:
	add.u64 	%rd53, %SP, 136;
	add.u64 	%rd2, %SPL, 136;
	st.local.u64 	[%rd2], %rd16;
	cvta.to.global.u64 	%rd54, %rd16;
	ld.global.u64 	%rd55, [%rd54+16];
	setp.eq.s64	%p2, %rd55, 0;
	@%p2 bra 	BB33_5;

	mov.u64 	%rd56, _ZN14MatrixAccessorIdE10len_sparseEv;
	st.local.u64 	[%rd2+8], %rd56;
	mov.u64 	%rd58, 0;
	st.local.u64 	[%rd2+16], %rd58;
	mov.u64 	%rd59, _ZN14MatrixAccessorIdE10pos_sparseEj;
	st.local.u64 	[%rd2+40], %rd59;
	st.local.u64 	[%rd2+48], %rd58;
	mov.u64 	%rd61, _ZN14MatrixAccessorIdE11cols_sparseEj;
	st.local.u64 	[%rd2+56], %rd61;
	st.local.u64 	[%rd2+64], %rd58;
	mov.u64 	%rd63, _ZN14MatrixAccessorIdE13val_sparse_rcEjj;
	st.local.u64 	[%rd2+88], %rd63;
	st.local.u64 	[%rd2+96], %rd58;
	mov.u64 	%rd65, _ZN14MatrixAccessorIdE11vals_sparseEj;
	st.local.u64 	[%rd2+104], %rd65;
	st.local.u64 	[%rd2+112], %rd58;
	mov.u64 	%rd67, _ZN14MatrixAccessorIdE14row_len_sparseEj;
	st.local.u64 	[%rd2+24], %rd67;
	st.local.u64 	[%rd2+32], %rd58;
	mov.u64 	%rd69, _ZN14MatrixAccessorIdE12val_sparse_iEj;
	st.local.u64 	[%rd2+72], %rd69;
	st.local.u64 	[%rd2+80], %rd58;
	mov.u64 	%rd71, _ZN14MatrixAccessorIdE10set_sparseEjjd;
	st.local.u64 	[%rd2+120], %rd71;
	st.local.u64 	[%rd2+128], %rd58;
	bra.uni 	BB33_6;

BB33_5:
	mov.u64 	%rd73, _ZN14MatrixAccessorIdE9len_denseEv;
	st.local.u64 	[%rd2+8], %rd73;
	mov.u64 	%rd75, 0;
	st.local.u64 	[%rd2+16], %rd75;
	mov.u64 	%rd76, _ZN14MatrixAccessorIdE9pos_denseEj;
	st.local.u64 	[%rd2+40], %rd76;
	st.local.u64 	[%rd2+48], %rd75;
	mov.u64 	%rd78, _ZN14MatrixAccessorIdE10cols_denseEj;
	st.local.u64 	[%rd2+56], %rd78;
	st.local.u64 	[%rd2+64], %rd75;
	mov.u64 	%rd80, _ZN14MatrixAccessorIdE12val_dense_rcEjj;
	st.local.u64 	[%rd2+88], %rd80;
	st.local.u64 	[%rd2+96], %rd75;
	mov.u64 	%rd82, _ZN14MatrixAccessorIdE10vals_denseEj;
	st.local.u64 	[%rd2+104], %rd82;
	st.local.u64 	[%rd2+112], %rd75;
	mov.u64 	%rd84, _ZN14MatrixAccessorIdE13row_len_denseEj;
	st.local.u64 	[%rd2+24], %rd84;
	st.local.u64 	[%rd2+32], %rd75;
	mov.u64 	%rd86, _ZN14MatrixAccessorIdE11val_dense_iEj;
	st.local.u64 	[%rd2+72], %rd86;
	st.local.u64 	[%rd2+80], %rd75;

BB33_6:
	mov.u32 	%r6, %tid.x;
	mov.u32 	%r7, %ctaid.x;
	shl.b32 	%r8, %r7, 1;
	mov.u32 	%r9, %ntid.x;
	mad.lo.s32 	%r43, %r8, %r9, %r6;
	mov.f64 	%fd44, 0d0000000000000000;
	setp.ge.u32	%p3, %r43, %r5;
	@%p3 bra 	BB33_15;

	mov.f64 	%fd44, 0d0000000000000000;

BB33_8:
	ld.local.u64 	%rd3, [%rd1+112];
	ld.local.u64 	%rd120, [%rd1+104];
	and.b64  	%rd90, %rd120, 1;
	setp.eq.b64	%p4, %rd90, 1;
	@!%p4 bra 	BB33_10;
	bra.uni 	BB33_9;

BB33_9:
	add.s64 	%rd93, %rd1, %rd3;
	ld.local.u64 	%rd94, [%rd93];
	add.s64 	%rd95, %rd120, %rd94;
	ld.u64 	%rd120, [%rd95+-1];

BB33_10:
	add.s64 	%rd97, %rd18, %rd3;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd97;
	.param .b32 param1;
	st.param.b32	[param1+0], %r43;
	.param .b64 retval0;
	prototype_5 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _) ;
	call (retval0), 
	%rd120, 
	(
	param0, 
	param1
	)
	, prototype_5;
	ld.param.b64	%rd99, [retval0+0];
	
	//{
	}// Callseq End 5
	ld.f64 	%fd31, [%rd99];
	add.f64 	%fd44, %fd44, %fd31;
	add.s32 	%r16, %r43, %r9;
	setp.ge.u32	%p5, %r16, %r5;
	@%p5 bra 	BB33_14;

	ld.local.u64 	%rd121, [%rd1+104];
	and.b64  	%rd102, %rd121, 1;
	setp.eq.b64	%p6, %rd102, 1;
	ld.local.u64 	%rd8, [%rd1+112];
	@!%p6 bra 	BB33_13;
	bra.uni 	BB33_12;

BB33_12:
	add.s64 	%rd105, %rd1, %rd8;
	ld.local.u64 	%rd106, [%rd105];
	add.s64 	%rd107, %rd121, %rd106;
	ld.u64 	%rd121, [%rd107+-1];

BB33_13:
	add.s64 	%rd109, %rd18, %rd8;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd109;
	.param .b32 param1;
	st.param.b32	[param1+0], %r16;
	.param .b64 retval0;
	prototype_6 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _) ;
	call (retval0), 
	%rd121, 
	(
	param0, 
	param1
	)
	, prototype_6;
	ld.param.b64	%rd111, [retval0+0];
	
	//{
	}// Callseq End 6
	ld.f64 	%fd32, [%rd111];
	add.f64 	%fd44, %fd44, %fd32;

BB33_14:
	shl.b32 	%r20, %r9, 1;
	mov.u32 	%r21, %nctaid.x;
	mad.lo.s32 	%r43, %r20, %r21, %r43;
	setp.lt.u32	%p7, %r43, %r5;
	@%p7 bra 	BB33_8;

BB33_15:
	shl.b32 	%r23, %r6, 3;
	mov.u32 	%r24, memory;
	add.s32 	%r4, %r24, %r23;
	st.shared.f64 	[%r4], %fd44;
	bar.sync 	0;
	setp.lt.u32	%p8, %r9, 1024;
	@%p8 bra 	BB33_19;

	setp.gt.u32	%p9, %r6, 511;
	@%p9 bra 	BB33_18;

	ld.shared.f64 	%fd33, [%r4+4096];
	add.f64 	%fd44, %fd44, %fd33;
	st.shared.f64 	[%r4], %fd44;

BB33_18:
	bar.sync 	0;

BB33_19:
	setp.lt.u32	%p10, %r9, 512;
	@%p10 bra 	BB33_23;

	setp.gt.u32	%p11, %r6, 255;
	@%p11 bra 	BB33_22;

	ld.shared.f64 	%fd34, [%r4+2048];
	add.f64 	%fd44, %fd44, %fd34;
	st.shared.f64 	[%r4], %fd44;

BB33_22:
	bar.sync 	0;

BB33_23:
	setp.lt.u32	%p12, %r9, 256;
	@%p12 bra 	BB33_27;

	setp.gt.u32	%p13, %r6, 127;
	@%p13 bra 	BB33_26;

	ld.shared.f64 	%fd35, [%r4+1024];
	add.f64 	%fd44, %fd44, %fd35;
	st.shared.f64 	[%r4], %fd44;

BB33_26:
	bar.sync 	0;

BB33_27:
	setp.lt.u32	%p14, %r9, 128;
	@%p14 bra 	BB33_31;

	setp.gt.u32	%p15, %r6, 63;
	@%p15 bra 	BB33_30;

	ld.shared.f64 	%fd36, [%r4+512];
	add.f64 	%fd44, %fd44, %fd36;
	st.shared.f64 	[%r4], %fd44;

BB33_30:
	bar.sync 	0;

BB33_31:
	setp.gt.u32	%p16, %r6, 31;
	@%p16 bra 	BB33_44;

	setp.lt.u32	%p17, %r9, 64;
	@%p17 bra 	BB33_34;

	ld.volatile.shared.f64 	%fd37, [%r4+256];
	add.f64 	%fd44, %fd44, %fd37;
	st.volatile.shared.f64 	[%r4], %fd44;

BB33_34:
	setp.lt.u32	%p18, %r9, 32;
	@%p18 bra 	BB33_36;

	ld.volatile.shared.f64 	%fd38, [%r4+128];
	add.f64 	%fd44, %fd44, %fd38;
	st.volatile.shared.f64 	[%r4], %fd44;

BB33_36:
	setp.lt.u32	%p19, %r9, 16;
	@%p19 bra 	BB33_38;

	ld.volatile.shared.f64 	%fd39, [%r4+64];
	add.f64 	%fd44, %fd44, %fd39;
	st.volatile.shared.f64 	[%r4], %fd44;

BB33_38:
	setp.lt.u32	%p20, %r9, 8;
	@%p20 bra 	BB33_40;

	ld.volatile.shared.f64 	%fd40, [%r4+32];
	add.f64 	%fd44, %fd44, %fd40;
	st.volatile.shared.f64 	[%r4], %fd44;

BB33_40:
	setp.lt.u32	%p21, %r9, 4;
	@%p21 bra 	BB33_42;

	ld.volatile.shared.f64 	%fd41, [%r4+16];
	add.f64 	%fd44, %fd44, %fd41;
	st.volatile.shared.f64 	[%r4], %fd44;

BB33_42:
	setp.lt.u32	%p22, %r9, 2;
	@%p22 bra 	BB33_44;

	ld.volatile.shared.f64 	%fd42, [%r4+8];
	add.f64 	%fd43, %fd44, %fd42;
	st.volatile.shared.f64 	[%r4], %fd43;

BB33_44:
	setp.ne.s32	%p23, %r6, 0;
	@%p23 bra 	BB33_48;

	ld.shared.f64 	%fd28, [memory];
	ld.local.u64 	%rd114, [%rd2+96];
	add.s64 	%rd11, %rd2, %rd114;
	add.s64 	%rd12, %rd53, %rd114;
	ld.local.u64 	%rd122, [%rd2+88];
	and.b64  	%rd115, %rd122, 1;
	setp.eq.b64	%p24, %rd115, 1;
	@!%p24 bra 	BB33_47;
	bra.uni 	BB33_46;

BB33_46:
	ld.local.u64 	%rd116, [%rd11];
	add.s64 	%rd117, %rd122, %rd116;
	ld.u64 	%rd122, [%rd117+-1];

BB33_47:
	mov.u32 	%r42, 0;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b32 param1;
	st.param.b32	[param1+0], %r42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r7;
	.param .b64 retval0;
	prototype_7 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _, .param .b32 _) ;
	call (retval0), 
	%rd122, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_7;
	ld.param.b64	%rd119, [retval0+0];
	
	//{
	}// Callseq End 7
	st.f64 	[%rd119], %fd28;

BB33_48:
	ret;
}

	// .globl	reduce_max_f
.visible .entry reduce_max_f(
	.param .u64 reduce_max_f_param_0,
	.param .u64 reduce_max_f_param_1,
	.param .u32 reduce_max_f_param_2
)
{
	.local .align 8 .b8 	__local_depot34[272];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<25>;
	.reg .f32 	%f<60>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<123>;


	mov.u64 	%SPL, __local_depot34;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd17, [reduce_max_f_param_0];
	ld.param.u64 	%rd16, [reduce_max_f_param_1];
	ld.param.u32 	%r5, [reduce_max_f_param_2];
	add.u64 	%rd18, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	st.local.u64 	[%rd1], %rd17;
	cvta.to.global.u64 	%rd19, %rd17;
	ld.global.u64 	%rd20, [%rd19+16];
	setp.eq.s64	%p1, %rd20, 0;
	@%p1 bra 	BB34_2;

	mov.u64 	%rd21, _ZN14MatrixAccessorIfE10len_sparseEv;
	st.local.u64 	[%rd1+8], %rd21;
	mov.u64 	%rd23, 0;
	st.local.u64 	[%rd1+16], %rd23;
	mov.u64 	%rd24, _ZN14MatrixAccessorIfE10pos_sparseEj;
	st.local.u64 	[%rd1+40], %rd24;
	st.local.u64 	[%rd1+48], %rd23;
	mov.u64 	%rd26, _ZN14MatrixAccessorIfE11cols_sparseEj;
	st.local.u64 	[%rd1+56], %rd26;
	st.local.u64 	[%rd1+64], %rd23;
	mov.u64 	%rd28, _ZN14MatrixAccessorIfE13val_sparse_rcEjj;
	st.local.u64 	[%rd1+88], %rd28;
	st.local.u64 	[%rd1+96], %rd23;
	mov.u64 	%rd30, _ZN14MatrixAccessorIfE11vals_sparseEj;
	st.local.u64 	[%rd1+104], %rd30;
	st.local.u64 	[%rd1+112], %rd23;
	mov.u64 	%rd32, _ZN14MatrixAccessorIfE14row_len_sparseEj;
	st.local.u64 	[%rd1+24], %rd32;
	st.local.u64 	[%rd1+32], %rd23;
	mov.u64 	%rd34, _ZN14MatrixAccessorIfE12val_sparse_iEj;
	st.local.u64 	[%rd1+72], %rd34;
	st.local.u64 	[%rd1+80], %rd23;
	mov.u64 	%rd36, _ZN14MatrixAccessorIfE10set_sparseEjjf;
	st.local.u64 	[%rd1+120], %rd36;
	st.local.u64 	[%rd1+128], %rd23;
	bra.uni 	BB34_3;

BB34_2:
	mov.u64 	%rd38, _ZN14MatrixAccessorIfE9len_denseEv;
	st.local.u64 	[%rd1+8], %rd38;
	mov.u64 	%rd40, 0;
	st.local.u64 	[%rd1+16], %rd40;
	mov.u64 	%rd41, _ZN14MatrixAccessorIfE9pos_denseEj;
	st.local.u64 	[%rd1+40], %rd41;
	st.local.u64 	[%rd1+48], %rd40;
	mov.u64 	%rd43, _ZN14MatrixAccessorIfE10cols_denseEj;
	st.local.u64 	[%rd1+56], %rd43;
	st.local.u64 	[%rd1+64], %rd40;
	mov.u64 	%rd45, _ZN14MatrixAccessorIfE12val_dense_rcEjj;
	st.local.u64 	[%rd1+88], %rd45;
	st.local.u64 	[%rd1+96], %rd40;
	mov.u64 	%rd47, _ZN14MatrixAccessorIfE10vals_denseEj;
	st.local.u64 	[%rd1+104], %rd47;
	st.local.u64 	[%rd1+112], %rd40;
	mov.u64 	%rd49, _ZN14MatrixAccessorIfE13row_len_denseEj;
	st.local.u64 	[%rd1+24], %rd49;
	st.local.u64 	[%rd1+32], %rd40;
	mov.u64 	%rd51, _ZN14MatrixAccessorIfE11val_dense_iEj;
	st.local.u64 	[%rd1+72], %rd51;
	st.local.u64 	[%rd1+80], %rd40;

BB34_3:
	add.u64 	%rd53, %SP, 136;
	add.u64 	%rd2, %SPL, 136;
	st.local.u64 	[%rd2], %rd16;
	cvta.to.global.u64 	%rd54, %rd16;
	ld.global.u64 	%rd55, [%rd54+16];
	setp.eq.s64	%p2, %rd55, 0;
	@%p2 bra 	BB34_5;

	mov.u64 	%rd56, _ZN14MatrixAccessorIfE10len_sparseEv;
	st.local.u64 	[%rd2+8], %rd56;
	mov.u64 	%rd58, 0;
	st.local.u64 	[%rd2+16], %rd58;
	mov.u64 	%rd59, _ZN14MatrixAccessorIfE10pos_sparseEj;
	st.local.u64 	[%rd2+40], %rd59;
	st.local.u64 	[%rd2+48], %rd58;
	mov.u64 	%rd61, _ZN14MatrixAccessorIfE11cols_sparseEj;
	st.local.u64 	[%rd2+56], %rd61;
	st.local.u64 	[%rd2+64], %rd58;
	mov.u64 	%rd63, _ZN14MatrixAccessorIfE13val_sparse_rcEjj;
	st.local.u64 	[%rd2+88], %rd63;
	st.local.u64 	[%rd2+96], %rd58;
	mov.u64 	%rd65, _ZN14MatrixAccessorIfE11vals_sparseEj;
	st.local.u64 	[%rd2+104], %rd65;
	st.local.u64 	[%rd2+112], %rd58;
	mov.u64 	%rd67, _ZN14MatrixAccessorIfE14row_len_sparseEj;
	st.local.u64 	[%rd2+24], %rd67;
	st.local.u64 	[%rd2+32], %rd58;
	mov.u64 	%rd69, _ZN14MatrixAccessorIfE12val_sparse_iEj;
	st.local.u64 	[%rd2+72], %rd69;
	st.local.u64 	[%rd2+80], %rd58;
	mov.u64 	%rd71, _ZN14MatrixAccessorIfE10set_sparseEjjf;
	st.local.u64 	[%rd2+120], %rd71;
	st.local.u64 	[%rd2+128], %rd58;
	bra.uni 	BB34_6;

BB34_5:
	mov.u64 	%rd73, _ZN14MatrixAccessorIfE9len_denseEv;
	st.local.u64 	[%rd2+8], %rd73;
	mov.u64 	%rd75, 0;
	st.local.u64 	[%rd2+16], %rd75;
	mov.u64 	%rd76, _ZN14MatrixAccessorIfE9pos_denseEj;
	st.local.u64 	[%rd2+40], %rd76;
	st.local.u64 	[%rd2+48], %rd75;
	mov.u64 	%rd78, _ZN14MatrixAccessorIfE10cols_denseEj;
	st.local.u64 	[%rd2+56], %rd78;
	st.local.u64 	[%rd2+64], %rd75;
	mov.u64 	%rd80, _ZN14MatrixAccessorIfE12val_dense_rcEjj;
	st.local.u64 	[%rd2+88], %rd80;
	st.local.u64 	[%rd2+96], %rd75;
	mov.u64 	%rd82, _ZN14MatrixAccessorIfE10vals_denseEj;
	st.local.u64 	[%rd2+104], %rd82;
	st.local.u64 	[%rd2+112], %rd75;
	mov.u64 	%rd84, _ZN14MatrixAccessorIfE13row_len_denseEj;
	st.local.u64 	[%rd2+24], %rd84;
	st.local.u64 	[%rd2+32], %rd75;
	mov.u64 	%rd86, _ZN14MatrixAccessorIfE11val_dense_iEj;
	st.local.u64 	[%rd2+72], %rd86;
	st.local.u64 	[%rd2+80], %rd75;

BB34_6:
	mov.u32 	%r6, %tid.x;
	mov.u32 	%r7, %ctaid.x;
	shl.b32 	%r8, %r7, 1;
	mov.u32 	%r9, %ntid.x;
	mad.lo.s32 	%r43, %r8, %r9, %r6;
	mov.f32 	%f44, 0fFF800000;
	setp.ge.u32	%p3, %r43, %r5;
	@%p3 bra 	BB34_15;

	mov.f32 	%f44, 0fFF800000;

BB34_8:
	ld.local.u64 	%rd3, [%rd1+112];
	ld.local.u64 	%rd120, [%rd1+104];
	and.b64  	%rd90, %rd120, 1;
	setp.eq.b64	%p4, %rd90, 1;
	@!%p4 bra 	BB34_10;
	bra.uni 	BB34_9;

BB34_9:
	add.s64 	%rd93, %rd1, %rd3;
	ld.local.u64 	%rd94, [%rd93];
	add.s64 	%rd95, %rd120, %rd94;
	ld.u64 	%rd120, [%rd95+-1];

BB34_10:
	add.s64 	%rd97, %rd18, %rd3;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd97;
	.param .b32 param1;
	st.param.b32	[param1+0], %r43;
	.param .b64 retval0;
	prototype_8 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _) ;
	call (retval0), 
	%rd120, 
	(
	param0, 
	param1
	)
	, prototype_8;
	ld.param.b64	%rd99, [retval0+0];
	
	//{
	}// Callseq End 8
	ld.f32 	%f31, [%rd99];
	max.f32 	%f44, %f44, %f31;
	add.s32 	%r16, %r43, %r9;
	setp.ge.u32	%p5, %r16, %r5;
	@%p5 bra 	BB34_14;

	ld.local.u64 	%rd121, [%rd1+104];
	and.b64  	%rd102, %rd121, 1;
	setp.eq.b64	%p6, %rd102, 1;
	ld.local.u64 	%rd8, [%rd1+112];
	@!%p6 bra 	BB34_13;
	bra.uni 	BB34_12;

BB34_12:
	add.s64 	%rd105, %rd1, %rd8;
	ld.local.u64 	%rd106, [%rd105];
	add.s64 	%rd107, %rd121, %rd106;
	ld.u64 	%rd121, [%rd107+-1];

BB34_13:
	add.s64 	%rd109, %rd18, %rd8;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd109;
	.param .b32 param1;
	st.param.b32	[param1+0], %r16;
	.param .b64 retval0;
	prototype_9 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _) ;
	call (retval0), 
	%rd121, 
	(
	param0, 
	param1
	)
	, prototype_9;
	ld.param.b64	%rd111, [retval0+0];
	
	//{
	}// Callseq End 9
	ld.f32 	%f32, [%rd111];
	max.f32 	%f44, %f44, %f32;

BB34_14:
	shl.b32 	%r20, %r9, 1;
	mov.u32 	%r21, %nctaid.x;
	mad.lo.s32 	%r43, %r20, %r21, %r43;
	setp.lt.u32	%p7, %r43, %r5;
	@%p7 bra 	BB34_8;

BB34_15:
	shl.b32 	%r23, %r6, 2;
	mov.u32 	%r24, memory;
	add.s32 	%r4, %r24, %r23;
	st.shared.f32 	[%r4], %f44;
	bar.sync 	0;
	setp.lt.u32	%p8, %r9, 1024;
	@%p8 bra 	BB34_19;

	setp.gt.u32	%p9, %r6, 511;
	@%p9 bra 	BB34_18;

	ld.shared.f32 	%f33, [%r4+2048];
	max.f32 	%f44, %f44, %f33;
	st.shared.f32 	[%r4], %f44;

BB34_18:
	bar.sync 	0;

BB34_19:
	setp.lt.u32	%p10, %r9, 512;
	@%p10 bra 	BB34_23;

	setp.gt.u32	%p11, %r6, 255;
	@%p11 bra 	BB34_22;

	ld.shared.f32 	%f34, [%r4+1024];
	max.f32 	%f44, %f44, %f34;
	st.shared.f32 	[%r4], %f44;

BB34_22:
	bar.sync 	0;

BB34_23:
	setp.lt.u32	%p12, %r9, 256;
	@%p12 bra 	BB34_27;

	setp.gt.u32	%p13, %r6, 127;
	@%p13 bra 	BB34_26;

	ld.shared.f32 	%f35, [%r4+512];
	max.f32 	%f44, %f44, %f35;
	st.shared.f32 	[%r4], %f44;

BB34_26:
	bar.sync 	0;

BB34_27:
	setp.lt.u32	%p14, %r9, 128;
	@%p14 bra 	BB34_31;

	setp.gt.u32	%p15, %r6, 63;
	@%p15 bra 	BB34_30;

	ld.shared.f32 	%f36, [%r4+256];
	max.f32 	%f44, %f44, %f36;
	st.shared.f32 	[%r4], %f44;

BB34_30:
	bar.sync 	0;

BB34_31:
	setp.gt.u32	%p16, %r6, 31;
	@%p16 bra 	BB34_44;

	setp.lt.u32	%p17, %r9, 64;
	@%p17 bra 	BB34_34;

	ld.volatile.shared.f32 	%f37, [%r4+128];
	max.f32 	%f44, %f44, %f37;
	st.volatile.shared.f32 	[%r4], %f44;

BB34_34:
	setp.lt.u32	%p18, %r9, 32;
	@%p18 bra 	BB34_36;

	ld.volatile.shared.f32 	%f38, [%r4+64];
	max.f32 	%f44, %f44, %f38;
	st.volatile.shared.f32 	[%r4], %f44;

BB34_36:
	setp.lt.u32	%p19, %r9, 16;
	@%p19 bra 	BB34_38;

	ld.volatile.shared.f32 	%f39, [%r4+32];
	max.f32 	%f44, %f44, %f39;
	st.volatile.shared.f32 	[%r4], %f44;

BB34_38:
	setp.lt.u32	%p20, %r9, 8;
	@%p20 bra 	BB34_40;

	ld.volatile.shared.f32 	%f40, [%r4+16];
	max.f32 	%f44, %f44, %f40;
	st.volatile.shared.f32 	[%r4], %f44;

BB34_40:
	setp.lt.u32	%p21, %r9, 4;
	@%p21 bra 	BB34_42;

	ld.volatile.shared.f32 	%f41, [%r4+8];
	max.f32 	%f44, %f44, %f41;
	st.volatile.shared.f32 	[%r4], %f44;

BB34_42:
	setp.lt.u32	%p22, %r9, 2;
	@%p22 bra 	BB34_44;

	ld.volatile.shared.f32 	%f42, [%r4+4];
	max.f32 	%f43, %f44, %f42;
	st.volatile.shared.f32 	[%r4], %f43;

BB34_44:
	setp.ne.s32	%p23, %r6, 0;
	@%p23 bra 	BB34_48;

	ld.shared.f32 	%f28, [memory];
	ld.local.u64 	%rd114, [%rd2+96];
	add.s64 	%rd11, %rd2, %rd114;
	add.s64 	%rd12, %rd53, %rd114;
	ld.local.u64 	%rd122, [%rd2+88];
	and.b64  	%rd115, %rd122, 1;
	setp.eq.b64	%p24, %rd115, 1;
	@!%p24 bra 	BB34_47;
	bra.uni 	BB34_46;

BB34_46:
	ld.local.u64 	%rd116, [%rd11];
	add.s64 	%rd117, %rd122, %rd116;
	ld.u64 	%rd122, [%rd117+-1];

BB34_47:
	mov.u32 	%r42, 0;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b32 param1;
	st.param.b32	[param1+0], %r42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r7;
	.param .b64 retval0;
	prototype_10 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _, .param .b32 _) ;
	call (retval0), 
	%rd122, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_10;
	ld.param.b64	%rd119, [retval0+0];
	
	//{
	}// Callseq End 10
	st.f32 	[%rd119], %f28;

BB34_48:
	ret;
}

	// .globl	reduce_max_d
.visible .entry reduce_max_d(
	.param .u64 reduce_max_d_param_0,
	.param .u64 reduce_max_d_param_1,
	.param .u32 reduce_max_d_param_2
)
{
	.local .align 8 .b8 	__local_depot35[272];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<25>;
	.reg .b32 	%r<44>;
	.reg .f64 	%fd<60>;
	.reg .b64 	%rd<123>;


	mov.u64 	%SPL, __local_depot35;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd17, [reduce_max_d_param_0];
	ld.param.u64 	%rd16, [reduce_max_d_param_1];
	ld.param.u32 	%r5, [reduce_max_d_param_2];
	add.u64 	%rd18, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	st.local.u64 	[%rd1], %rd17;
	cvta.to.global.u64 	%rd19, %rd17;
	ld.global.u64 	%rd20, [%rd19+16];
	setp.eq.s64	%p1, %rd20, 0;
	@%p1 bra 	BB35_2;

	mov.u64 	%rd21, _ZN14MatrixAccessorIdE10len_sparseEv;
	st.local.u64 	[%rd1+8], %rd21;
	mov.u64 	%rd23, 0;
	st.local.u64 	[%rd1+16], %rd23;
	mov.u64 	%rd24, _ZN14MatrixAccessorIdE10pos_sparseEj;
	st.local.u64 	[%rd1+40], %rd24;
	st.local.u64 	[%rd1+48], %rd23;
	mov.u64 	%rd26, _ZN14MatrixAccessorIdE11cols_sparseEj;
	st.local.u64 	[%rd1+56], %rd26;
	st.local.u64 	[%rd1+64], %rd23;
	mov.u64 	%rd28, _ZN14MatrixAccessorIdE13val_sparse_rcEjj;
	st.local.u64 	[%rd1+88], %rd28;
	st.local.u64 	[%rd1+96], %rd23;
	mov.u64 	%rd30, _ZN14MatrixAccessorIdE11vals_sparseEj;
	st.local.u64 	[%rd1+104], %rd30;
	st.local.u64 	[%rd1+112], %rd23;
	mov.u64 	%rd32, _ZN14MatrixAccessorIdE14row_len_sparseEj;
	st.local.u64 	[%rd1+24], %rd32;
	st.local.u64 	[%rd1+32], %rd23;
	mov.u64 	%rd34, _ZN14MatrixAccessorIdE12val_sparse_iEj;
	st.local.u64 	[%rd1+72], %rd34;
	st.local.u64 	[%rd1+80], %rd23;
	mov.u64 	%rd36, _ZN14MatrixAccessorIdE10set_sparseEjjd;
	st.local.u64 	[%rd1+120], %rd36;
	st.local.u64 	[%rd1+128], %rd23;
	bra.uni 	BB35_3;

BB35_2:
	mov.u64 	%rd38, _ZN14MatrixAccessorIdE9len_denseEv;
	st.local.u64 	[%rd1+8], %rd38;
	mov.u64 	%rd40, 0;
	st.local.u64 	[%rd1+16], %rd40;
	mov.u64 	%rd41, _ZN14MatrixAccessorIdE9pos_denseEj;
	st.local.u64 	[%rd1+40], %rd41;
	st.local.u64 	[%rd1+48], %rd40;
	mov.u64 	%rd43, _ZN14MatrixAccessorIdE10cols_denseEj;
	st.local.u64 	[%rd1+56], %rd43;
	st.local.u64 	[%rd1+64], %rd40;
	mov.u64 	%rd45, _ZN14MatrixAccessorIdE12val_dense_rcEjj;
	st.local.u64 	[%rd1+88], %rd45;
	st.local.u64 	[%rd1+96], %rd40;
	mov.u64 	%rd47, _ZN14MatrixAccessorIdE10vals_denseEj;
	st.local.u64 	[%rd1+104], %rd47;
	st.local.u64 	[%rd1+112], %rd40;
	mov.u64 	%rd49, _ZN14MatrixAccessorIdE13row_len_denseEj;
	st.local.u64 	[%rd1+24], %rd49;
	st.local.u64 	[%rd1+32], %rd40;
	mov.u64 	%rd51, _ZN14MatrixAccessorIdE11val_dense_iEj;
	st.local.u64 	[%rd1+72], %rd51;
	st.local.u64 	[%rd1+80], %rd40;

BB35_3:
	add.u64 	%rd53, %SP, 136;
	add.u64 	%rd2, %SPL, 136;
	st.local.u64 	[%rd2], %rd16;
	cvta.to.global.u64 	%rd54, %rd16;
	ld.global.u64 	%rd55, [%rd54+16];
	setp.eq.s64	%p2, %rd55, 0;
	@%p2 bra 	BB35_5;

	mov.u64 	%rd56, _ZN14MatrixAccessorIdE10len_sparseEv;
	st.local.u64 	[%rd2+8], %rd56;
	mov.u64 	%rd58, 0;
	st.local.u64 	[%rd2+16], %rd58;
	mov.u64 	%rd59, _ZN14MatrixAccessorIdE10pos_sparseEj;
	st.local.u64 	[%rd2+40], %rd59;
	st.local.u64 	[%rd2+48], %rd58;
	mov.u64 	%rd61, _ZN14MatrixAccessorIdE11cols_sparseEj;
	st.local.u64 	[%rd2+56], %rd61;
	st.local.u64 	[%rd2+64], %rd58;
	mov.u64 	%rd63, _ZN14MatrixAccessorIdE13val_sparse_rcEjj;
	st.local.u64 	[%rd2+88], %rd63;
	st.local.u64 	[%rd2+96], %rd58;
	mov.u64 	%rd65, _ZN14MatrixAccessorIdE11vals_sparseEj;
	st.local.u64 	[%rd2+104], %rd65;
	st.local.u64 	[%rd2+112], %rd58;
	mov.u64 	%rd67, _ZN14MatrixAccessorIdE14row_len_sparseEj;
	st.local.u64 	[%rd2+24], %rd67;
	st.local.u64 	[%rd2+32], %rd58;
	mov.u64 	%rd69, _ZN14MatrixAccessorIdE12val_sparse_iEj;
	st.local.u64 	[%rd2+72], %rd69;
	st.local.u64 	[%rd2+80], %rd58;
	mov.u64 	%rd71, _ZN14MatrixAccessorIdE10set_sparseEjjd;
	st.local.u64 	[%rd2+120], %rd71;
	st.local.u64 	[%rd2+128], %rd58;
	bra.uni 	BB35_6;

BB35_5:
	mov.u64 	%rd73, _ZN14MatrixAccessorIdE9len_denseEv;
	st.local.u64 	[%rd2+8], %rd73;
	mov.u64 	%rd75, 0;
	st.local.u64 	[%rd2+16], %rd75;
	mov.u64 	%rd76, _ZN14MatrixAccessorIdE9pos_denseEj;
	st.local.u64 	[%rd2+40], %rd76;
	st.local.u64 	[%rd2+48], %rd75;
	mov.u64 	%rd78, _ZN14MatrixAccessorIdE10cols_denseEj;
	st.local.u64 	[%rd2+56], %rd78;
	st.local.u64 	[%rd2+64], %rd75;
	mov.u64 	%rd80, _ZN14MatrixAccessorIdE12val_dense_rcEjj;
	st.local.u64 	[%rd2+88], %rd80;
	st.local.u64 	[%rd2+96], %rd75;
	mov.u64 	%rd82, _ZN14MatrixAccessorIdE10vals_denseEj;
	st.local.u64 	[%rd2+104], %rd82;
	st.local.u64 	[%rd2+112], %rd75;
	mov.u64 	%rd84, _ZN14MatrixAccessorIdE13row_len_denseEj;
	st.local.u64 	[%rd2+24], %rd84;
	st.local.u64 	[%rd2+32], %rd75;
	mov.u64 	%rd86, _ZN14MatrixAccessorIdE11val_dense_iEj;
	st.local.u64 	[%rd2+72], %rd86;
	st.local.u64 	[%rd2+80], %rd75;

BB35_6:
	mov.u32 	%r6, %tid.x;
	mov.u32 	%r7, %ctaid.x;
	shl.b32 	%r8, %r7, 1;
	mov.u32 	%r9, %ntid.x;
	mad.lo.s32 	%r43, %r8, %r9, %r6;
	mov.f64 	%fd44, 0dFFF0000000000000;
	setp.ge.u32	%p3, %r43, %r5;
	@%p3 bra 	BB35_15;

	mov.f64 	%fd44, 0dFFF0000000000000;

BB35_8:
	ld.local.u64 	%rd3, [%rd1+112];
	ld.local.u64 	%rd120, [%rd1+104];
	and.b64  	%rd90, %rd120, 1;
	setp.eq.b64	%p4, %rd90, 1;
	@!%p4 bra 	BB35_10;
	bra.uni 	BB35_9;

BB35_9:
	add.s64 	%rd93, %rd1, %rd3;
	ld.local.u64 	%rd94, [%rd93];
	add.s64 	%rd95, %rd120, %rd94;
	ld.u64 	%rd120, [%rd95+-1];

BB35_10:
	add.s64 	%rd97, %rd18, %rd3;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd97;
	.param .b32 param1;
	st.param.b32	[param1+0], %r43;
	.param .b64 retval0;
	prototype_11 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _) ;
	call (retval0), 
	%rd120, 
	(
	param0, 
	param1
	)
	, prototype_11;
	ld.param.b64	%rd99, [retval0+0];
	
	//{
	}// Callseq End 11
	ld.f64 	%fd31, [%rd99];
	max.f64 	%fd44, %fd44, %fd31;
	add.s32 	%r16, %r43, %r9;
	setp.ge.u32	%p5, %r16, %r5;
	@%p5 bra 	BB35_14;

	ld.local.u64 	%rd121, [%rd1+104];
	and.b64  	%rd102, %rd121, 1;
	setp.eq.b64	%p6, %rd102, 1;
	ld.local.u64 	%rd8, [%rd1+112];
	@!%p6 bra 	BB35_13;
	bra.uni 	BB35_12;

BB35_12:
	add.s64 	%rd105, %rd1, %rd8;
	ld.local.u64 	%rd106, [%rd105];
	add.s64 	%rd107, %rd121, %rd106;
	ld.u64 	%rd121, [%rd107+-1];

BB35_13:
	add.s64 	%rd109, %rd18, %rd8;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd109;
	.param .b32 param1;
	st.param.b32	[param1+0], %r16;
	.param .b64 retval0;
	prototype_12 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _) ;
	call (retval0), 
	%rd121, 
	(
	param0, 
	param1
	)
	, prototype_12;
	ld.param.b64	%rd111, [retval0+0];
	
	//{
	}// Callseq End 12
	ld.f64 	%fd32, [%rd111];
	max.f64 	%fd44, %fd44, %fd32;

BB35_14:
	shl.b32 	%r20, %r9, 1;
	mov.u32 	%r21, %nctaid.x;
	mad.lo.s32 	%r43, %r20, %r21, %r43;
	setp.lt.u32	%p7, %r43, %r5;
	@%p7 bra 	BB35_8;

BB35_15:
	shl.b32 	%r23, %r6, 3;
	mov.u32 	%r24, memory;
	add.s32 	%r4, %r24, %r23;
	st.shared.f64 	[%r4], %fd44;
	bar.sync 	0;
	setp.lt.u32	%p8, %r9, 1024;
	@%p8 bra 	BB35_19;

	setp.gt.u32	%p9, %r6, 511;
	@%p9 bra 	BB35_18;

	ld.shared.f64 	%fd33, [%r4+4096];
	max.f64 	%fd44, %fd44, %fd33;
	st.shared.f64 	[%r4], %fd44;

BB35_18:
	bar.sync 	0;

BB35_19:
	setp.lt.u32	%p10, %r9, 512;
	@%p10 bra 	BB35_23;

	setp.gt.u32	%p11, %r6, 255;
	@%p11 bra 	BB35_22;

	ld.shared.f64 	%fd34, [%r4+2048];
	max.f64 	%fd44, %fd44, %fd34;
	st.shared.f64 	[%r4], %fd44;

BB35_22:
	bar.sync 	0;

BB35_23:
	setp.lt.u32	%p12, %r9, 256;
	@%p12 bra 	BB35_27;

	setp.gt.u32	%p13, %r6, 127;
	@%p13 bra 	BB35_26;

	ld.shared.f64 	%fd35, [%r4+1024];
	max.f64 	%fd44, %fd44, %fd35;
	st.shared.f64 	[%r4], %fd44;

BB35_26:
	bar.sync 	0;

BB35_27:
	setp.lt.u32	%p14, %r9, 128;
	@%p14 bra 	BB35_31;

	setp.gt.u32	%p15, %r6, 63;
	@%p15 bra 	BB35_30;

	ld.shared.f64 	%fd36, [%r4+512];
	max.f64 	%fd44, %fd44, %fd36;
	st.shared.f64 	[%r4], %fd44;

BB35_30:
	bar.sync 	0;

BB35_31:
	setp.gt.u32	%p16, %r6, 31;
	@%p16 bra 	BB35_44;

	setp.lt.u32	%p17, %r9, 64;
	@%p17 bra 	BB35_34;

	ld.volatile.shared.f64 	%fd37, [%r4+256];
	max.f64 	%fd44, %fd44, %fd37;
	st.volatile.shared.f64 	[%r4], %fd44;

BB35_34:
	setp.lt.u32	%p18, %r9, 32;
	@%p18 bra 	BB35_36;

	ld.volatile.shared.f64 	%fd38, [%r4+128];
	max.f64 	%fd44, %fd44, %fd38;
	st.volatile.shared.f64 	[%r4], %fd44;

BB35_36:
	setp.lt.u32	%p19, %r9, 16;
	@%p19 bra 	BB35_38;

	ld.volatile.shared.f64 	%fd39, [%r4+64];
	max.f64 	%fd44, %fd44, %fd39;
	st.volatile.shared.f64 	[%r4], %fd44;

BB35_38:
	setp.lt.u32	%p20, %r9, 8;
	@%p20 bra 	BB35_40;

	ld.volatile.shared.f64 	%fd40, [%r4+32];
	max.f64 	%fd44, %fd44, %fd40;
	st.volatile.shared.f64 	[%r4], %fd44;

BB35_40:
	setp.lt.u32	%p21, %r9, 4;
	@%p21 bra 	BB35_42;

	ld.volatile.shared.f64 	%fd41, [%r4+16];
	max.f64 	%fd44, %fd44, %fd41;
	st.volatile.shared.f64 	[%r4], %fd44;

BB35_42:
	setp.lt.u32	%p22, %r9, 2;
	@%p22 bra 	BB35_44;

	ld.volatile.shared.f64 	%fd42, [%r4+8];
	max.f64 	%fd43, %fd44, %fd42;
	st.volatile.shared.f64 	[%r4], %fd43;

BB35_44:
	setp.ne.s32	%p23, %r6, 0;
	@%p23 bra 	BB35_48;

	ld.shared.f64 	%fd28, [memory];
	ld.local.u64 	%rd114, [%rd2+96];
	add.s64 	%rd11, %rd2, %rd114;
	add.s64 	%rd12, %rd53, %rd114;
	ld.local.u64 	%rd122, [%rd2+88];
	and.b64  	%rd115, %rd122, 1;
	setp.eq.b64	%p24, %rd115, 1;
	@!%p24 bra 	BB35_47;
	bra.uni 	BB35_46;

BB35_46:
	ld.local.u64 	%rd116, [%rd11];
	add.s64 	%rd117, %rd122, %rd116;
	ld.u64 	%rd122, [%rd117+-1];

BB35_47:
	mov.u32 	%r42, 0;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b32 param1;
	st.param.b32	[param1+0], %r42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r7;
	.param .b64 retval0;
	prototype_13 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _, .param .b32 _) ;
	call (retval0), 
	%rd122, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_13;
	ld.param.b64	%rd119, [retval0+0];
	
	//{
	}// Callseq End 13
	st.f64 	[%rd119], %fd28;

BB35_48:
	ret;
}

	// .globl	reduce_min_f
.visible .entry reduce_min_f(
	.param .u64 reduce_min_f_param_0,
	.param .u64 reduce_min_f_param_1,
	.param .u32 reduce_min_f_param_2
)
{
	.local .align 8 .b8 	__local_depot36[272];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<25>;
	.reg .f32 	%f<60>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<123>;


	mov.u64 	%SPL, __local_depot36;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd17, [reduce_min_f_param_0];
	ld.param.u64 	%rd16, [reduce_min_f_param_1];
	ld.param.u32 	%r5, [reduce_min_f_param_2];
	add.u64 	%rd18, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	st.local.u64 	[%rd1], %rd17;
	cvta.to.global.u64 	%rd19, %rd17;
	ld.global.u64 	%rd20, [%rd19+16];
	setp.eq.s64	%p1, %rd20, 0;
	@%p1 bra 	BB36_2;

	mov.u64 	%rd21, _ZN14MatrixAccessorIfE10len_sparseEv;
	st.local.u64 	[%rd1+8], %rd21;
	mov.u64 	%rd23, 0;
	st.local.u64 	[%rd1+16], %rd23;
	mov.u64 	%rd24, _ZN14MatrixAccessorIfE10pos_sparseEj;
	st.local.u64 	[%rd1+40], %rd24;
	st.local.u64 	[%rd1+48], %rd23;
	mov.u64 	%rd26, _ZN14MatrixAccessorIfE11cols_sparseEj;
	st.local.u64 	[%rd1+56], %rd26;
	st.local.u64 	[%rd1+64], %rd23;
	mov.u64 	%rd28, _ZN14MatrixAccessorIfE13val_sparse_rcEjj;
	st.local.u64 	[%rd1+88], %rd28;
	st.local.u64 	[%rd1+96], %rd23;
	mov.u64 	%rd30, _ZN14MatrixAccessorIfE11vals_sparseEj;
	st.local.u64 	[%rd1+104], %rd30;
	st.local.u64 	[%rd1+112], %rd23;
	mov.u64 	%rd32, _ZN14MatrixAccessorIfE14row_len_sparseEj;
	st.local.u64 	[%rd1+24], %rd32;
	st.local.u64 	[%rd1+32], %rd23;
	mov.u64 	%rd34, _ZN14MatrixAccessorIfE12val_sparse_iEj;
	st.local.u64 	[%rd1+72], %rd34;
	st.local.u64 	[%rd1+80], %rd23;
	mov.u64 	%rd36, _ZN14MatrixAccessorIfE10set_sparseEjjf;
	st.local.u64 	[%rd1+120], %rd36;
	st.local.u64 	[%rd1+128], %rd23;
	bra.uni 	BB36_3;

BB36_2:
	mov.u64 	%rd38, _ZN14MatrixAccessorIfE9len_denseEv;
	st.local.u64 	[%rd1+8], %rd38;
	mov.u64 	%rd40, 0;
	st.local.u64 	[%rd1+16], %rd40;
	mov.u64 	%rd41, _ZN14MatrixAccessorIfE9pos_denseEj;
	st.local.u64 	[%rd1+40], %rd41;
	st.local.u64 	[%rd1+48], %rd40;
	mov.u64 	%rd43, _ZN14MatrixAccessorIfE10cols_denseEj;
	st.local.u64 	[%rd1+56], %rd43;
	st.local.u64 	[%rd1+64], %rd40;
	mov.u64 	%rd45, _ZN14MatrixAccessorIfE12val_dense_rcEjj;
	st.local.u64 	[%rd1+88], %rd45;
	st.local.u64 	[%rd1+96], %rd40;
	mov.u64 	%rd47, _ZN14MatrixAccessorIfE10vals_denseEj;
	st.local.u64 	[%rd1+104], %rd47;
	st.local.u64 	[%rd1+112], %rd40;
	mov.u64 	%rd49, _ZN14MatrixAccessorIfE13row_len_denseEj;
	st.local.u64 	[%rd1+24], %rd49;
	st.local.u64 	[%rd1+32], %rd40;
	mov.u64 	%rd51, _ZN14MatrixAccessorIfE11val_dense_iEj;
	st.local.u64 	[%rd1+72], %rd51;
	st.local.u64 	[%rd1+80], %rd40;

BB36_3:
	add.u64 	%rd53, %SP, 136;
	add.u64 	%rd2, %SPL, 136;
	st.local.u64 	[%rd2], %rd16;
	cvta.to.global.u64 	%rd54, %rd16;
	ld.global.u64 	%rd55, [%rd54+16];
	setp.eq.s64	%p2, %rd55, 0;
	@%p2 bra 	BB36_5;

	mov.u64 	%rd56, _ZN14MatrixAccessorIfE10len_sparseEv;
	st.local.u64 	[%rd2+8], %rd56;
	mov.u64 	%rd58, 0;
	st.local.u64 	[%rd2+16], %rd58;
	mov.u64 	%rd59, _ZN14MatrixAccessorIfE10pos_sparseEj;
	st.local.u64 	[%rd2+40], %rd59;
	st.local.u64 	[%rd2+48], %rd58;
	mov.u64 	%rd61, _ZN14MatrixAccessorIfE11cols_sparseEj;
	st.local.u64 	[%rd2+56], %rd61;
	st.local.u64 	[%rd2+64], %rd58;
	mov.u64 	%rd63, _ZN14MatrixAccessorIfE13val_sparse_rcEjj;
	st.local.u64 	[%rd2+88], %rd63;
	st.local.u64 	[%rd2+96], %rd58;
	mov.u64 	%rd65, _ZN14MatrixAccessorIfE11vals_sparseEj;
	st.local.u64 	[%rd2+104], %rd65;
	st.local.u64 	[%rd2+112], %rd58;
	mov.u64 	%rd67, _ZN14MatrixAccessorIfE14row_len_sparseEj;
	st.local.u64 	[%rd2+24], %rd67;
	st.local.u64 	[%rd2+32], %rd58;
	mov.u64 	%rd69, _ZN14MatrixAccessorIfE12val_sparse_iEj;
	st.local.u64 	[%rd2+72], %rd69;
	st.local.u64 	[%rd2+80], %rd58;
	mov.u64 	%rd71, _ZN14MatrixAccessorIfE10set_sparseEjjf;
	st.local.u64 	[%rd2+120], %rd71;
	st.local.u64 	[%rd2+128], %rd58;
	bra.uni 	BB36_6;

BB36_5:
	mov.u64 	%rd73, _ZN14MatrixAccessorIfE9len_denseEv;
	st.local.u64 	[%rd2+8], %rd73;
	mov.u64 	%rd75, 0;
	st.local.u64 	[%rd2+16], %rd75;
	mov.u64 	%rd76, _ZN14MatrixAccessorIfE9pos_denseEj;
	st.local.u64 	[%rd2+40], %rd76;
	st.local.u64 	[%rd2+48], %rd75;
	mov.u64 	%rd78, _ZN14MatrixAccessorIfE10cols_denseEj;
	st.local.u64 	[%rd2+56], %rd78;
	st.local.u64 	[%rd2+64], %rd75;
	mov.u64 	%rd80, _ZN14MatrixAccessorIfE12val_dense_rcEjj;
	st.local.u64 	[%rd2+88], %rd80;
	st.local.u64 	[%rd2+96], %rd75;
	mov.u64 	%rd82, _ZN14MatrixAccessorIfE10vals_denseEj;
	st.local.u64 	[%rd2+104], %rd82;
	st.local.u64 	[%rd2+112], %rd75;
	mov.u64 	%rd84, _ZN14MatrixAccessorIfE13row_len_denseEj;
	st.local.u64 	[%rd2+24], %rd84;
	st.local.u64 	[%rd2+32], %rd75;
	mov.u64 	%rd86, _ZN14MatrixAccessorIfE11val_dense_iEj;
	st.local.u64 	[%rd2+72], %rd86;
	st.local.u64 	[%rd2+80], %rd75;

BB36_6:
	mov.u32 	%r6, %tid.x;
	mov.u32 	%r7, %ctaid.x;
	shl.b32 	%r8, %r7, 1;
	mov.u32 	%r9, %ntid.x;
	mad.lo.s32 	%r43, %r8, %r9, %r6;
	mov.f32 	%f44, 0f7F800000;
	setp.ge.u32	%p3, %r43, %r5;
	@%p3 bra 	BB36_15;

	mov.f32 	%f44, 0f7F800000;

BB36_8:
	ld.local.u64 	%rd3, [%rd1+112];
	ld.local.u64 	%rd120, [%rd1+104];
	and.b64  	%rd90, %rd120, 1;
	setp.eq.b64	%p4, %rd90, 1;
	@!%p4 bra 	BB36_10;
	bra.uni 	BB36_9;

BB36_9:
	add.s64 	%rd93, %rd1, %rd3;
	ld.local.u64 	%rd94, [%rd93];
	add.s64 	%rd95, %rd120, %rd94;
	ld.u64 	%rd120, [%rd95+-1];

BB36_10:
	add.s64 	%rd97, %rd18, %rd3;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd97;
	.param .b32 param1;
	st.param.b32	[param1+0], %r43;
	.param .b64 retval0;
	prototype_14 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _) ;
	call (retval0), 
	%rd120, 
	(
	param0, 
	param1
	)
	, prototype_14;
	ld.param.b64	%rd99, [retval0+0];
	
	//{
	}// Callseq End 14
	ld.f32 	%f31, [%rd99];
	min.f32 	%f44, %f44, %f31;
	add.s32 	%r16, %r43, %r9;
	setp.ge.u32	%p5, %r16, %r5;
	@%p5 bra 	BB36_14;

	ld.local.u64 	%rd121, [%rd1+104];
	and.b64  	%rd102, %rd121, 1;
	setp.eq.b64	%p6, %rd102, 1;
	ld.local.u64 	%rd8, [%rd1+112];
	@!%p6 bra 	BB36_13;
	bra.uni 	BB36_12;

BB36_12:
	add.s64 	%rd105, %rd1, %rd8;
	ld.local.u64 	%rd106, [%rd105];
	add.s64 	%rd107, %rd121, %rd106;
	ld.u64 	%rd121, [%rd107+-1];

BB36_13:
	add.s64 	%rd109, %rd18, %rd8;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd109;
	.param .b32 param1;
	st.param.b32	[param1+0], %r16;
	.param .b64 retval0;
	prototype_15 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _) ;
	call (retval0), 
	%rd121, 
	(
	param0, 
	param1
	)
	, prototype_15;
	ld.param.b64	%rd111, [retval0+0];
	
	//{
	}// Callseq End 15
	ld.f32 	%f32, [%rd111];
	min.f32 	%f44, %f44, %f32;

BB36_14:
	shl.b32 	%r20, %r9, 1;
	mov.u32 	%r21, %nctaid.x;
	mad.lo.s32 	%r43, %r20, %r21, %r43;
	setp.lt.u32	%p7, %r43, %r5;
	@%p7 bra 	BB36_8;

BB36_15:
	shl.b32 	%r23, %r6, 2;
	mov.u32 	%r24, memory;
	add.s32 	%r4, %r24, %r23;
	st.shared.f32 	[%r4], %f44;
	bar.sync 	0;
	setp.lt.u32	%p8, %r9, 1024;
	@%p8 bra 	BB36_19;

	setp.gt.u32	%p9, %r6, 511;
	@%p9 bra 	BB36_18;

	ld.shared.f32 	%f33, [%r4+2048];
	min.f32 	%f44, %f44, %f33;
	st.shared.f32 	[%r4], %f44;

BB36_18:
	bar.sync 	0;

BB36_19:
	setp.lt.u32	%p10, %r9, 512;
	@%p10 bra 	BB36_23;

	setp.gt.u32	%p11, %r6, 255;
	@%p11 bra 	BB36_22;

	ld.shared.f32 	%f34, [%r4+1024];
	min.f32 	%f44, %f44, %f34;
	st.shared.f32 	[%r4], %f44;

BB36_22:
	bar.sync 	0;

BB36_23:
	setp.lt.u32	%p12, %r9, 256;
	@%p12 bra 	BB36_27;

	setp.gt.u32	%p13, %r6, 127;
	@%p13 bra 	BB36_26;

	ld.shared.f32 	%f35, [%r4+512];
	min.f32 	%f44, %f44, %f35;
	st.shared.f32 	[%r4], %f44;

BB36_26:
	bar.sync 	0;

BB36_27:
	setp.lt.u32	%p14, %r9, 128;
	@%p14 bra 	BB36_31;

	setp.gt.u32	%p15, %r6, 63;
	@%p15 bra 	BB36_30;

	ld.shared.f32 	%f36, [%r4+256];
	min.f32 	%f44, %f44, %f36;
	st.shared.f32 	[%r4], %f44;

BB36_30:
	bar.sync 	0;

BB36_31:
	setp.gt.u32	%p16, %r6, 31;
	@%p16 bra 	BB36_44;

	setp.lt.u32	%p17, %r9, 64;
	@%p17 bra 	BB36_34;

	ld.volatile.shared.f32 	%f37, [%r4+128];
	min.f32 	%f44, %f44, %f37;
	st.volatile.shared.f32 	[%r4], %f44;

BB36_34:
	setp.lt.u32	%p18, %r9, 32;
	@%p18 bra 	BB36_36;

	ld.volatile.shared.f32 	%f38, [%r4+64];
	min.f32 	%f44, %f44, %f38;
	st.volatile.shared.f32 	[%r4], %f44;

BB36_36:
	setp.lt.u32	%p19, %r9, 16;
	@%p19 bra 	BB36_38;

	ld.volatile.shared.f32 	%f39, [%r4+32];
	min.f32 	%f44, %f44, %f39;
	st.volatile.shared.f32 	[%r4], %f44;

BB36_38:
	setp.lt.u32	%p20, %r9, 8;
	@%p20 bra 	BB36_40;

	ld.volatile.shared.f32 	%f40, [%r4+16];
	min.f32 	%f44, %f44, %f40;
	st.volatile.shared.f32 	[%r4], %f44;

BB36_40:
	setp.lt.u32	%p21, %r9, 4;
	@%p21 bra 	BB36_42;

	ld.volatile.shared.f32 	%f41, [%r4+8];
	min.f32 	%f44, %f44, %f41;
	st.volatile.shared.f32 	[%r4], %f44;

BB36_42:
	setp.lt.u32	%p22, %r9, 2;
	@%p22 bra 	BB36_44;

	ld.volatile.shared.f32 	%f42, [%r4+4];
	min.f32 	%f43, %f44, %f42;
	st.volatile.shared.f32 	[%r4], %f43;

BB36_44:
	setp.ne.s32	%p23, %r6, 0;
	@%p23 bra 	BB36_48;

	ld.shared.f32 	%f28, [memory];
	ld.local.u64 	%rd114, [%rd2+96];
	add.s64 	%rd11, %rd2, %rd114;
	add.s64 	%rd12, %rd53, %rd114;
	ld.local.u64 	%rd122, [%rd2+88];
	and.b64  	%rd115, %rd122, 1;
	setp.eq.b64	%p24, %rd115, 1;
	@!%p24 bra 	BB36_47;
	bra.uni 	BB36_46;

BB36_46:
	ld.local.u64 	%rd116, [%rd11];
	add.s64 	%rd117, %rd122, %rd116;
	ld.u64 	%rd122, [%rd117+-1];

BB36_47:
	mov.u32 	%r42, 0;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b32 param1;
	st.param.b32	[param1+0], %r42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r7;
	.param .b64 retval0;
	prototype_16 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _, .param .b32 _) ;
	call (retval0), 
	%rd122, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_16;
	ld.param.b64	%rd119, [retval0+0];
	
	//{
	}// Callseq End 16
	st.f32 	[%rd119], %f28;

BB36_48:
	ret;
}

	// .globl	reduce_min_d
.visible .entry reduce_min_d(
	.param .u64 reduce_min_d_param_0,
	.param .u64 reduce_min_d_param_1,
	.param .u32 reduce_min_d_param_2
)
{
	.local .align 8 .b8 	__local_depot37[272];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<25>;
	.reg .b32 	%r<44>;
	.reg .f64 	%fd<60>;
	.reg .b64 	%rd<123>;


	mov.u64 	%SPL, __local_depot37;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd17, [reduce_min_d_param_0];
	ld.param.u64 	%rd16, [reduce_min_d_param_1];
	ld.param.u32 	%r5, [reduce_min_d_param_2];
	add.u64 	%rd18, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	st.local.u64 	[%rd1], %rd17;
	cvta.to.global.u64 	%rd19, %rd17;
	ld.global.u64 	%rd20, [%rd19+16];
	setp.eq.s64	%p1, %rd20, 0;
	@%p1 bra 	BB37_2;

	mov.u64 	%rd21, _ZN14MatrixAccessorIdE10len_sparseEv;
	st.local.u64 	[%rd1+8], %rd21;
	mov.u64 	%rd23, 0;
	st.local.u64 	[%rd1+16], %rd23;
	mov.u64 	%rd24, _ZN14MatrixAccessorIdE10pos_sparseEj;
	st.local.u64 	[%rd1+40], %rd24;
	st.local.u64 	[%rd1+48], %rd23;
	mov.u64 	%rd26, _ZN14MatrixAccessorIdE11cols_sparseEj;
	st.local.u64 	[%rd1+56], %rd26;
	st.local.u64 	[%rd1+64], %rd23;
	mov.u64 	%rd28, _ZN14MatrixAccessorIdE13val_sparse_rcEjj;
	st.local.u64 	[%rd1+88], %rd28;
	st.local.u64 	[%rd1+96], %rd23;
	mov.u64 	%rd30, _ZN14MatrixAccessorIdE11vals_sparseEj;
	st.local.u64 	[%rd1+104], %rd30;
	st.local.u64 	[%rd1+112], %rd23;
	mov.u64 	%rd32, _ZN14MatrixAccessorIdE14row_len_sparseEj;
	st.local.u64 	[%rd1+24], %rd32;
	st.local.u64 	[%rd1+32], %rd23;
	mov.u64 	%rd34, _ZN14MatrixAccessorIdE12val_sparse_iEj;
	st.local.u64 	[%rd1+72], %rd34;
	st.local.u64 	[%rd1+80], %rd23;
	mov.u64 	%rd36, _ZN14MatrixAccessorIdE10set_sparseEjjd;
	st.local.u64 	[%rd1+120], %rd36;
	st.local.u64 	[%rd1+128], %rd23;
	bra.uni 	BB37_3;

BB37_2:
	mov.u64 	%rd38, _ZN14MatrixAccessorIdE9len_denseEv;
	st.local.u64 	[%rd1+8], %rd38;
	mov.u64 	%rd40, 0;
	st.local.u64 	[%rd1+16], %rd40;
	mov.u64 	%rd41, _ZN14MatrixAccessorIdE9pos_denseEj;
	st.local.u64 	[%rd1+40], %rd41;
	st.local.u64 	[%rd1+48], %rd40;
	mov.u64 	%rd43, _ZN14MatrixAccessorIdE10cols_denseEj;
	st.local.u64 	[%rd1+56], %rd43;
	st.local.u64 	[%rd1+64], %rd40;
	mov.u64 	%rd45, _ZN14MatrixAccessorIdE12val_dense_rcEjj;
	st.local.u64 	[%rd1+88], %rd45;
	st.local.u64 	[%rd1+96], %rd40;
	mov.u64 	%rd47, _ZN14MatrixAccessorIdE10vals_denseEj;
	st.local.u64 	[%rd1+104], %rd47;
	st.local.u64 	[%rd1+112], %rd40;
	mov.u64 	%rd49, _ZN14MatrixAccessorIdE13row_len_denseEj;
	st.local.u64 	[%rd1+24], %rd49;
	st.local.u64 	[%rd1+32], %rd40;
	mov.u64 	%rd51, _ZN14MatrixAccessorIdE11val_dense_iEj;
	st.local.u64 	[%rd1+72], %rd51;
	st.local.u64 	[%rd1+80], %rd40;

BB37_3:
	add.u64 	%rd53, %SP, 136;
	add.u64 	%rd2, %SPL, 136;
	st.local.u64 	[%rd2], %rd16;
	cvta.to.global.u64 	%rd54, %rd16;
	ld.global.u64 	%rd55, [%rd54+16];
	setp.eq.s64	%p2, %rd55, 0;
	@%p2 bra 	BB37_5;

	mov.u64 	%rd56, _ZN14MatrixAccessorIdE10len_sparseEv;
	st.local.u64 	[%rd2+8], %rd56;
	mov.u64 	%rd58, 0;
	st.local.u64 	[%rd2+16], %rd58;
	mov.u64 	%rd59, _ZN14MatrixAccessorIdE10pos_sparseEj;
	st.local.u64 	[%rd2+40], %rd59;
	st.local.u64 	[%rd2+48], %rd58;
	mov.u64 	%rd61, _ZN14MatrixAccessorIdE11cols_sparseEj;
	st.local.u64 	[%rd2+56], %rd61;
	st.local.u64 	[%rd2+64], %rd58;
	mov.u64 	%rd63, _ZN14MatrixAccessorIdE13val_sparse_rcEjj;
	st.local.u64 	[%rd2+88], %rd63;
	st.local.u64 	[%rd2+96], %rd58;
	mov.u64 	%rd65, _ZN14MatrixAccessorIdE11vals_sparseEj;
	st.local.u64 	[%rd2+104], %rd65;
	st.local.u64 	[%rd2+112], %rd58;
	mov.u64 	%rd67, _ZN14MatrixAccessorIdE14row_len_sparseEj;
	st.local.u64 	[%rd2+24], %rd67;
	st.local.u64 	[%rd2+32], %rd58;
	mov.u64 	%rd69, _ZN14MatrixAccessorIdE12val_sparse_iEj;
	st.local.u64 	[%rd2+72], %rd69;
	st.local.u64 	[%rd2+80], %rd58;
	mov.u64 	%rd71, _ZN14MatrixAccessorIdE10set_sparseEjjd;
	st.local.u64 	[%rd2+120], %rd71;
	st.local.u64 	[%rd2+128], %rd58;
	bra.uni 	BB37_6;

BB37_5:
	mov.u64 	%rd73, _ZN14MatrixAccessorIdE9len_denseEv;
	st.local.u64 	[%rd2+8], %rd73;
	mov.u64 	%rd75, 0;
	st.local.u64 	[%rd2+16], %rd75;
	mov.u64 	%rd76, _ZN14MatrixAccessorIdE9pos_denseEj;
	st.local.u64 	[%rd2+40], %rd76;
	st.local.u64 	[%rd2+48], %rd75;
	mov.u64 	%rd78, _ZN14MatrixAccessorIdE10cols_denseEj;
	st.local.u64 	[%rd2+56], %rd78;
	st.local.u64 	[%rd2+64], %rd75;
	mov.u64 	%rd80, _ZN14MatrixAccessorIdE12val_dense_rcEjj;
	st.local.u64 	[%rd2+88], %rd80;
	st.local.u64 	[%rd2+96], %rd75;
	mov.u64 	%rd82, _ZN14MatrixAccessorIdE10vals_denseEj;
	st.local.u64 	[%rd2+104], %rd82;
	st.local.u64 	[%rd2+112], %rd75;
	mov.u64 	%rd84, _ZN14MatrixAccessorIdE13row_len_denseEj;
	st.local.u64 	[%rd2+24], %rd84;
	st.local.u64 	[%rd2+32], %rd75;
	mov.u64 	%rd86, _ZN14MatrixAccessorIdE11val_dense_iEj;
	st.local.u64 	[%rd2+72], %rd86;
	st.local.u64 	[%rd2+80], %rd75;

BB37_6:
	mov.u32 	%r6, %tid.x;
	mov.u32 	%r7, %ctaid.x;
	shl.b32 	%r8, %r7, 1;
	mov.u32 	%r9, %ntid.x;
	mad.lo.s32 	%r43, %r8, %r9, %r6;
	mov.f64 	%fd44, 0d7FF0000000000000;
	setp.ge.u32	%p3, %r43, %r5;
	@%p3 bra 	BB37_15;

	mov.f64 	%fd44, 0d7FF0000000000000;

BB37_8:
	ld.local.u64 	%rd3, [%rd1+112];
	ld.local.u64 	%rd120, [%rd1+104];
	and.b64  	%rd90, %rd120, 1;
	setp.eq.b64	%p4, %rd90, 1;
	@!%p4 bra 	BB37_10;
	bra.uni 	BB37_9;

BB37_9:
	add.s64 	%rd93, %rd1, %rd3;
	ld.local.u64 	%rd94, [%rd93];
	add.s64 	%rd95, %rd120, %rd94;
	ld.u64 	%rd120, [%rd95+-1];

BB37_10:
	add.s64 	%rd97, %rd18, %rd3;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd97;
	.param .b32 param1;
	st.param.b32	[param1+0], %r43;
	.param .b64 retval0;
	prototype_17 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _) ;
	call (retval0), 
	%rd120, 
	(
	param0, 
	param1
	)
	, prototype_17;
	ld.param.b64	%rd99, [retval0+0];
	
	//{
	}// Callseq End 17
	ld.f64 	%fd31, [%rd99];
	min.f64 	%fd44, %fd44, %fd31;
	add.s32 	%r16, %r43, %r9;
	setp.ge.u32	%p5, %r16, %r5;
	@%p5 bra 	BB37_14;

	ld.local.u64 	%rd121, [%rd1+104];
	and.b64  	%rd102, %rd121, 1;
	setp.eq.b64	%p6, %rd102, 1;
	ld.local.u64 	%rd8, [%rd1+112];
	@!%p6 bra 	BB37_13;
	bra.uni 	BB37_12;

BB37_12:
	add.s64 	%rd105, %rd1, %rd8;
	ld.local.u64 	%rd106, [%rd105];
	add.s64 	%rd107, %rd121, %rd106;
	ld.u64 	%rd121, [%rd107+-1];

BB37_13:
	add.s64 	%rd109, %rd18, %rd8;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd109;
	.param .b32 param1;
	st.param.b32	[param1+0], %r16;
	.param .b64 retval0;
	prototype_18 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _) ;
	call (retval0), 
	%rd121, 
	(
	param0, 
	param1
	)
	, prototype_18;
	ld.param.b64	%rd111, [retval0+0];
	
	//{
	}// Callseq End 18
	ld.f64 	%fd32, [%rd111];
	min.f64 	%fd44, %fd44, %fd32;

BB37_14:
	shl.b32 	%r20, %r9, 1;
	mov.u32 	%r21, %nctaid.x;
	mad.lo.s32 	%r43, %r20, %r21, %r43;
	setp.lt.u32	%p7, %r43, %r5;
	@%p7 bra 	BB37_8;

BB37_15:
	shl.b32 	%r23, %r6, 3;
	mov.u32 	%r24, memory;
	add.s32 	%r4, %r24, %r23;
	st.shared.f64 	[%r4], %fd44;
	bar.sync 	0;
	setp.lt.u32	%p8, %r9, 1024;
	@%p8 bra 	BB37_19;

	setp.gt.u32	%p9, %r6, 511;
	@%p9 bra 	BB37_18;

	ld.shared.f64 	%fd33, [%r4+4096];
	min.f64 	%fd44, %fd44, %fd33;
	st.shared.f64 	[%r4], %fd44;

BB37_18:
	bar.sync 	0;

BB37_19:
	setp.lt.u32	%p10, %r9, 512;
	@%p10 bra 	BB37_23;

	setp.gt.u32	%p11, %r6, 255;
	@%p11 bra 	BB37_22;

	ld.shared.f64 	%fd34, [%r4+2048];
	min.f64 	%fd44, %fd44, %fd34;
	st.shared.f64 	[%r4], %fd44;

BB37_22:
	bar.sync 	0;

BB37_23:
	setp.lt.u32	%p12, %r9, 256;
	@%p12 bra 	BB37_27;

	setp.gt.u32	%p13, %r6, 127;
	@%p13 bra 	BB37_26;

	ld.shared.f64 	%fd35, [%r4+1024];
	min.f64 	%fd44, %fd44, %fd35;
	st.shared.f64 	[%r4], %fd44;

BB37_26:
	bar.sync 	0;

BB37_27:
	setp.lt.u32	%p14, %r9, 128;
	@%p14 bra 	BB37_31;

	setp.gt.u32	%p15, %r6, 63;
	@%p15 bra 	BB37_30;

	ld.shared.f64 	%fd36, [%r4+512];
	min.f64 	%fd44, %fd44, %fd36;
	st.shared.f64 	[%r4], %fd44;

BB37_30:
	bar.sync 	0;

BB37_31:
	setp.gt.u32	%p16, %r6, 31;
	@%p16 bra 	BB37_44;

	setp.lt.u32	%p17, %r9, 64;
	@%p17 bra 	BB37_34;

	ld.volatile.shared.f64 	%fd37, [%r4+256];
	min.f64 	%fd44, %fd44, %fd37;
	st.volatile.shared.f64 	[%r4], %fd44;

BB37_34:
	setp.lt.u32	%p18, %r9, 32;
	@%p18 bra 	BB37_36;

	ld.volatile.shared.f64 	%fd38, [%r4+128];
	min.f64 	%fd44, %fd44, %fd38;
	st.volatile.shared.f64 	[%r4], %fd44;

BB37_36:
	setp.lt.u32	%p19, %r9, 16;
	@%p19 bra 	BB37_38;

	ld.volatile.shared.f64 	%fd39, [%r4+64];
	min.f64 	%fd44, %fd44, %fd39;
	st.volatile.shared.f64 	[%r4], %fd44;

BB37_38:
	setp.lt.u32	%p20, %r9, 8;
	@%p20 bra 	BB37_40;

	ld.volatile.shared.f64 	%fd40, [%r4+32];
	min.f64 	%fd44, %fd44, %fd40;
	st.volatile.shared.f64 	[%r4], %fd44;

BB37_40:
	setp.lt.u32	%p21, %r9, 4;
	@%p21 bra 	BB37_42;

	ld.volatile.shared.f64 	%fd41, [%r4+16];
	min.f64 	%fd44, %fd44, %fd41;
	st.volatile.shared.f64 	[%r4], %fd44;

BB37_42:
	setp.lt.u32	%p22, %r9, 2;
	@%p22 bra 	BB37_44;

	ld.volatile.shared.f64 	%fd42, [%r4+8];
	min.f64 	%fd43, %fd44, %fd42;
	st.volatile.shared.f64 	[%r4], %fd43;

BB37_44:
	setp.ne.s32	%p23, %r6, 0;
	@%p23 bra 	BB37_48;

	ld.shared.f64 	%fd28, [memory];
	ld.local.u64 	%rd114, [%rd2+96];
	add.s64 	%rd11, %rd2, %rd114;
	add.s64 	%rd12, %rd53, %rd114;
	ld.local.u64 	%rd122, [%rd2+88];
	and.b64  	%rd115, %rd122, 1;
	setp.eq.b64	%p24, %rd115, 1;
	@!%p24 bra 	BB37_47;
	bra.uni 	BB37_46;

BB37_46:
	ld.local.u64 	%rd116, [%rd11];
	add.s64 	%rd117, %rd122, %rd116;
	ld.u64 	%rd122, [%rd117+-1];

BB37_47:
	mov.u32 	%r42, 0;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b32 param1;
	st.param.b32	[param1+0], %r42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r7;
	.param .b64 retval0;
	prototype_19 : .callprototype (.param .b64 _) _ (.param .b64 _, .param .b32 _, .param .b32 _) ;
	call (retval0), 
	%rd122, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_19;
	ld.param.b64	%rd119, [retval0+0];
	
	//{
	}// Callseq End 19
	st.f64 	[%rd119], %fd28;

BB37_48:
	ret;
}


